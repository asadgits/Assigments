From 87e538cf51b836d8b3ef7ad34c2b576b4b0315d2 Mon Sep 17 00:00:00 2001
From: asad <iamasadiqbal@gmail.com>
Date: Tue, 20 Jul 2021 10:59:49 +0500
Subject: [PATCH 03/12] commiting from home after making some changes , but
 last one is left

---
 FirstTask/.idea/compiler.xml                  |   8 ++
 FirstTask/.idea/uiDesigner.xml                | 124 ++++++++++++++++++
 FirstTask/.idea/vcs.xml                       |   6 +
 .../production/FirstTask/Five/CarType.class   | Bin 0 -> 157 bytes
 .../production/FirstTask/Five/ClassD.class    | Bin 692 -> 0 bytes
 .../production/FirstTask/Five/Corolla.class   | Bin 0 -> 893 bytes
 .../production/FirstTask/Five/Engine.class    | Bin 0 -> 126 bytes
 .../FirstTask/Five/InterFaceA.class           | Bin 128 -> 0 bytes
 .../FirstTask/Five/InterfaceB.class           | Bin 128 -> 0 bytes
 .../FirstTask/Five/InterfaceC.class           | Bin 174 -> 0 bytes
 .../production/FirstTask/Five/Toyota.class    | Bin 0 -> 159 bytes
 .../out/production/FirstTask/Four/Car.class   | Bin 0 -> 481 bytes
 .../production/FirstTask/Four/ClassA.class    | Bin 490 -> 0 bytes
 .../production/FirstTask/Four/ClassB.class    | Bin 488 -> 0 bytes
 .../production/FirstTask/Four/ClassC.class    | Bin 263 -> 0 bytes
 .../production/FirstTask/Four/ClassD.class    | Bin 490 -> 0 bytes
 .../out/production/FirstTask/Four/Honda.class | Bin 0 -> 257 bytes
 .../production/FirstTask/Four/Yamaha.class    | Bin 0 -> 483 bytes
 .../out/production/FirstTask/Four/bike.class  | Bin 0 -> 482 bytes
 .../out/production/FirstTask/Main$1.class     | Bin 0 -> 532 bytes
 .../out/production/FirstTask/Main$2.class     | Bin 0 -> 532 bytes
 FirstTask/out/production/FirstTask/Main.class | Bin 2793 -> 2219 bytes
 .../FirstTask/TaskOne/Student.class           | Bin 567 -> 904 bytes
 .../production/FirstTask/TaskThree/Car.class  | Bin 0 -> 493 bytes
 .../FirstTask/TaskThree/ClassA.class          | Bin 502 -> 0 bytes
 .../FirstTask/TaskThree/ClassB.class          | Bin 500 -> 0 bytes
 .../FirstTask/TaskThree/Vehicle.class         | Bin 0 -> 503 bytes
 .../FirstTask/TaskTwo/SingleTon$SnglTon.class | Bin 0 -> 1063 bytes
 .../FirstTask/TaskTwo/SingleTon.class         | Bin 434 -> 775 bytes
 .../FirstTask/threePointFour/Company.class    | Bin 540 -> 534 bytes
 .../FirstTask/threePointFour/Emplyee.class    | Bin 520 -> 535 bytes
 .../FirstTask/threePointThree/Car.class       | Bin 1235 -> 1248 bytes
 .../threePointTwo/BigSchoolingSystem.class    | Bin 0 -> 1074 bytes
 .../threePointTwo/Composeexample.class        | Bin 1042 -> 0 bytes
 .../FirstTask/threePointTwo/School.class      | Bin 435 -> 462 bytes
 .../FirstTask/threePointTwo/Student.class     | Bin 586 -> 0 bytes
 FirstTask/sh.exe.stackdump                    |  31 +++++
 FirstTask/src/Five/CarType.java               |  14 ++
 FirstTask/src/Five/ClassD.java                |  16 ---
 FirstTask/src/Five/Corolla.java               |  31 +++++
 FirstTask/src/Five/Engine.java                |  10 ++
 FirstTask/src/Five/InterFaceA.java            |   5 -
 FirstTask/src/Five/InterfaceB.java            |   5 -
 FirstTask/src/Five/InterfaceC.java            |   5 -
 FirstTask/src/Five/Toyota.java                |   5 +
 FirstTask/src/Four/{ClassA.java => Car.java}  |   4 +-
 FirstTask/src/Four/ClassC.java                |   5 -
 FirstTask/src/Four/Honda.java                 |   5 +
 .../src/Four/{ClassD.java => Yamaha.java}     |   2 +-
 FirstTask/src/Four/{ClassB.java => bike.java} |   6 +-
 FirstTask/src/Main.java                       | 111 +++++++++++-----
 FirstTask/src/TaskOne/Student.java            |  20 ++-
 .../src/TaskThree/{ClassB.java => Car.java}   |   4 +-
 .../TaskThree/{ClassA.java => Vehicle.java}   |   4 +-
 FirstTask/src/TaskTwo/SingleTon.java          | 119 ++++++++++++++++-
 .../CarType.java                              |   8 ++
 .../Corolla.java                              |  11 ++
 .../testInterfaceAndAbstractClass/Engine.java |  11 ++
 .../testingInterfaceBehaviour/CarType.java    |   8 ++
 .../testingInterfaceBehaviour/Corolla.java    |  12 ++
 .../src/testingInterfaceBehaviour/Engine.java |   9 ++
 FirstTask/src/threePointFour/Company.java     |   6 +-
 FirstTask/src/threePointFour/Emplyee.java     |  12 +-
 FirstTask/src/threePointThree/Car.java        |   6 +-
 .../src/threePointTwo/BigSchoolingSystem.java |  52 ++++++++
 .../src/threePointTwo/Composeexample.java     |  48 -------
 FirstTask/src/threePointTwo/School.java       |  18 +++
 67 files changed, 588 insertions(+), 153 deletions(-)
 create mode 100644 FirstTask/.idea/compiler.xml
 create mode 100644 FirstTask/.idea/uiDesigner.xml
 create mode 100644 FirstTask/.idea/vcs.xml
 create mode 100644 FirstTask/out/production/FirstTask/Five/CarType.class
 delete mode 100644 FirstTask/out/production/FirstTask/Five/ClassD.class
 create mode 100644 FirstTask/out/production/FirstTask/Five/Corolla.class
 create mode 100644 FirstTask/out/production/FirstTask/Five/Engine.class
 delete mode 100644 FirstTask/out/production/FirstTask/Five/InterFaceA.class
 delete mode 100644 FirstTask/out/production/FirstTask/Five/InterfaceB.class
 delete mode 100644 FirstTask/out/production/FirstTask/Five/InterfaceC.class
 create mode 100644 FirstTask/out/production/FirstTask/Five/Toyota.class
 create mode 100644 FirstTask/out/production/FirstTask/Four/Car.class
 delete mode 100644 FirstTask/out/production/FirstTask/Four/ClassA.class
 delete mode 100644 FirstTask/out/production/FirstTask/Four/ClassB.class
 delete mode 100644 FirstTask/out/production/FirstTask/Four/ClassC.class
 delete mode 100644 FirstTask/out/production/FirstTask/Four/ClassD.class
 create mode 100644 FirstTask/out/production/FirstTask/Four/Honda.class
 create mode 100644 FirstTask/out/production/FirstTask/Four/Yamaha.class
 create mode 100644 FirstTask/out/production/FirstTask/Four/bike.class
 create mode 100644 FirstTask/out/production/FirstTask/Main$1.class
 create mode 100644 FirstTask/out/production/FirstTask/Main$2.class
 create mode 100644 FirstTask/out/production/FirstTask/TaskThree/Car.class
 delete mode 100644 FirstTask/out/production/FirstTask/TaskThree/ClassA.class
 delete mode 100644 FirstTask/out/production/FirstTask/TaskThree/ClassB.class
 create mode 100644 FirstTask/out/production/FirstTask/TaskThree/Vehicle.class
 create mode 100644 FirstTask/out/production/FirstTask/TaskTwo/SingleTon$SnglTon.class
 create mode 100644 FirstTask/out/production/FirstTask/threePointTwo/BigSchoolingSystem.class
 delete mode 100644 FirstTask/out/production/FirstTask/threePointTwo/Composeexample.class
 delete mode 100644 FirstTask/out/production/FirstTask/threePointTwo/Student.class
 create mode 100644 FirstTask/sh.exe.stackdump
 create mode 100644 FirstTask/src/Five/CarType.java
 delete mode 100644 FirstTask/src/Five/ClassD.java
 create mode 100644 FirstTask/src/Five/Corolla.java
 create mode 100644 FirstTask/src/Five/Engine.java
 delete mode 100644 FirstTask/src/Five/InterFaceA.java
 delete mode 100644 FirstTask/src/Five/InterfaceB.java
 delete mode 100644 FirstTask/src/Five/InterfaceC.java
 create mode 100644 FirstTask/src/Five/Toyota.java
 rename FirstTask/src/Four/{ClassA.java => Car.java} (62%)
 delete mode 100644 FirstTask/src/Four/ClassC.java
 create mode 100644 FirstTask/src/Four/Honda.java
 rename FirstTask/src/Four/{ClassD.java => Yamaha.java} (74%)
 rename FirstTask/src/Four/{ClassB.java => bike.java} (62%)
 rename FirstTask/src/TaskThree/{ClassB.java => Car.java} (58%)
 rename FirstTask/src/TaskThree/{ClassA.java => Vehicle.java} (64%)
 create mode 100644 FirstTask/src/testInterfaceAndAbstractClass/CarType.java
 create mode 100644 FirstTask/src/testInterfaceAndAbstractClass/Corolla.java
 create mode 100644 FirstTask/src/testInterfaceAndAbstractClass/Engine.java
 create mode 100644 FirstTask/src/testingInterfaceBehaviour/CarType.java
 create mode 100644 FirstTask/src/testingInterfaceBehaviour/Corolla.java
 create mode 100644 FirstTask/src/testingInterfaceBehaviour/Engine.java
 create mode 100644 FirstTask/src/threePointTwo/BigSchoolingSystem.java
 delete mode 100644 FirstTask/src/threePointTwo/Composeexample.java
 create mode 100644 FirstTask/src/threePointTwo/School.java

diff --git a/FirstTask/.idea/compiler.xml b/FirstTask/.idea/compiler.xml
new file mode 100644
index 0000000..57159e3
--- /dev/null
+++ b/FirstTask/.idea/compiler.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel>
+      <module name="FirstTask" target="" />
+    </bytecodeTargetLevel>
+  </component>
+</project>
\ No newline at end of file
diff --git a/FirstTask/.idea/uiDesigner.xml b/FirstTask/.idea/uiDesigner.xml
new file mode 100644
index 0000000..e96534f
--- /dev/null
+++ b/FirstTask/.idea/uiDesigner.xml
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
diff --git a/FirstTask/.idea/vcs.xml b/FirstTask/.idea/vcs.xml
new file mode 100644
index 0000000..94a25f7
--- /dev/null
+++ b/FirstTask/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/FirstTask/out/production/FirstTask/Five/CarType.class b/FirstTask/out/production/FirstTask/Five/CarType.class
new file mode 100644
index 0000000000000000000000000000000000000000..6f484f1d5373b91f47bc0a8220bf2648a1936a03
GIT binary patch
literal 157
zcmX^0Z`VEs1_m1jZgvJHMg|_Y%(7H{=ft9r%7RpO1{OvJfvm)`ME#t^ymWp4q^#8B
z5=I8*;?go8si7Ih$iP~hnUa{t$iS7BUs~i;=>{Z$oM0f8oa&aDlL|BvYMLI%AT~w@
gpiZEL3=GUb!&w>F7(kY=Lun2W4OGDiB$*hv02}llP5=M^

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/Five/ClassD.class b/FirstTask/out/production/FirstTask/Five/ClassD.class
deleted file mode 100644
index 047337df98adcb4a5496734c8c481eff0894cdf6..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 692
zcmZwEOHaZ;5C`!8Lb0WkhxmTu`*E-l4jv$0FeWBMO)%V-vcj6unzm^CSbEUJgCD>T
zWt^4<HR)w$cXsxd-OShb$0vXW_I0F?R-qWkV2Yu1&mXyIbEj`!ckhK2FibV1BZD)B
z^ub{#3k_Knx`7;wf9>sOKM+Ieaz}J&t`$MjHE%rW1ns~Rd|1~|U@-iF`*cznieTXO
zbd)fyqHJIWvkWr{w;0ri(6Ak155{ivKtiR{uOD_a%*SjsW;HCvm0Da;vCNRWkdMM_
z+T8cgRje`;qr#;V2=9(tqRF5%-JYO>mUP6`XxJ6rE$`Y?DYsmU+a2!7a32?yU?6>l
zeCrQfXUIffjB_>4H3q%yjyy|T$Pmnp-*Fs%8Jk$5K`^Y)R20fI42o;CGbuC5nWJ~G
z7h0sSPBA<N(%7JAj2loP2DILqTt1CZAo~inoPR^{7YGL*G8)uBNOpp3CnIwSh)zf@
V5!p#b77~yGA;m;wm)@De-VcSXcenrm

diff --git a/FirstTask/out/production/FirstTask/Five/Corolla.class b/FirstTask/out/production/FirstTask/Five/Corolla.class
new file mode 100644
index 0000000000000000000000000000000000000000..ed0b71faabdd9df0ce5ff60e250d6b1e07ddc8f8
GIT binary patch
literal 893
zcmaiyO;6iE5Qg8)2X-8jK=>#hh0>Omgi5ub2M$3TK*}kiNP*lp$wC&{-pF=>^0VMj
zBo6%n{3yiOu@aD0;xe-{p7+_A9Y4Q3{ReQ2eG3_64diU(F~_iQ%SYUCxqsvQ?c9oP
z#4vX(eHooFWUIAy0VWCtEE`4G@5)=_FcKbBsUeA0nh8iM=OU1P)QSSZy}F4KgB|wO
z-NBA0qQ2@`Siquzij5^KGc0LT48|a4xISU46K>KVL8X6FueD9Arr5(2Yho?U{7Ewg
zHYn4OBjKE>K)EhA@R^~QWG>ZMMVujbrh0;*+?2jJA9@`TT=I@fnMzZ2x!dM}jN>$!
zi~2HTC^g?w>%<(0;93P9_q!y`wyxR?`EVdakD_omiX++MG>&zxhQaB$L6(9Rxvpr)
z_(D5v@^}0o_=<H}6T>F$%pgyzBD+PAL!Ob(?>~aw(;<Uxvhimii!WsDNda~U13G`3
zijNW~P<Vh*ng56K3=sboF~+3(W{|=Z@?8&E(LgMM6t$3DJ>-)HQX)uM3;8jH{7S~7
g5ocpe-eLKTkWEMU`LS?aE8P27xUCgdslg0tuSe;J3jhEB

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/Five/Engine.class b/FirstTask/out/production/FirstTask/Five/Engine.class
new file mode 100644
index 0000000000000000000000000000000000000000..4322e361aa763530b0f3419452ee738cbda28994
GIT binary patch
literal 126
zcmX^0Z`VEs1_m1jPId++Mh0%T%(7H{*Sz%1yi|4u7Dfhvti-ZJ{hY+SbbbG%tkmQZ
zpqhfzqO|;?+{C=(R7M774b3n{2Cm@z(xT*4x6B-%5I01>9!M)2BLh$k&;|wuMxb%5
P3~V4413QppV&DJ(HrN|v

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/Five/InterFaceA.class b/FirstTask/out/production/FirstTask/Five/InterFaceA.class
deleted file mode 100644
index 91fdd9ad8ffb74ecb284884a3feae9dbdf4dd966..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 128
zcmX^0Z`VEs1_m1jPId++Mh1Sj%(7H{&%Bb<BDcikR7Z9O7Dfhvti-ZJ{hY+SbbbG%
ztkmQZMh4d6jQny#Mh0dL%`ip=uHgLAqU2P!%$!u95eVISAdPH{3_x{2I~W)kfrha%
Ouz^?%>_C!<fdc?uh8unW

diff --git a/FirstTask/out/production/FirstTask/Five/InterfaceB.class b/FirstTask/out/production/FirstTask/Five/InterfaceB.class
deleted file mode 100644
index 0415e1b2f524b25375ce30f45900080086c50514..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 128
zcmX^0Z`VEs1_m1jPId++Mh1Sj%(7H{&%Bb<qO`>1R3~-@7Dfhvti-ZJ{hY+SbbbG%
ztkmQZMh4d6jQnyVMh0dL%`ip=uHgLAqU2P!%$!u95eVISAdPH{3_x{2I~W)kfrha%
Ouz^?%>_C!<fdc?>5F5b&

diff --git a/FirstTask/out/production/FirstTask/Five/InterfaceC.class b/FirstTask/out/production/FirstTask/Five/InterfaceC.class
deleted file mode 100644
index ce40b01eaeb88041183b1bc7b6904e14d3449f33..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 174
zcmX^0Z`VEs1_m1jUUmj1Mh1Sj%(7H{&%Bb<qO`>1RA+Vu7Dfhvti-ZJ{hY+SbbbG%
ztkmQZb_O;SrEWl_j_eE^D1spUPK*q!#TohK#*7Ti8k%8@3|ztarA5i9Zkai$K*b1q
i^gvbs4F#%WU}9ipU<bO15ok3h0~d(Jzzrms7<d4xizgWX

diff --git a/FirstTask/out/production/FirstTask/Five/Toyota.class b/FirstTask/out/production/FirstTask/Five/Toyota.class
new file mode 100644
index 0000000000000000000000000000000000000000..897e19cfa9504f893a15c70e7be710bd34897f0e
GIT binary patch
literal 159
zcmX^0Z`VEs1_m1jUUmj1Mh0%T%(7Jdko?O0l0<d}7Dfhvti-ZJ{hY+SbbbG%tkmQZ
zb_O<>GS|HH%)C@~1`b9B9<V;=#G;VOf>cHZ*5ZQH)D%VrW)00SMh33n{L-T2RJY6=
npcFU6a6OQ@K$C!K7?>DX8Q6i2U<BI7$-o6-F>nJ(CI%h=qmm*B

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/Four/Car.class b/FirstTask/out/production/FirstTask/Four/Car.class
new file mode 100644
index 0000000000000000000000000000000000000000..bec7cc1e67f8ff010888f165d83f3b464012644d
GIT binary patch
literal 481
zcmZvZO;5r=5Qg7{N<XZEAd25Tf(Lu_05LHnoEkN$;l98Imb6{d7K}ej51M%J2l%6m
zv!D<Y_b|IN^UgDq+0U={4*(sUIVhlL!f>&H5<_Lm=iHBYGWKr=Q!&gLN*$TV{EDI2
zZ1rteuuV8FHsSt}hfi59Vp6FY71e_UNGks>l}R4vso-(j!Zt%AoTx`H7WqVtyk4qe
zuN(0!^R69Kuw$a?qJ~|D+CKya^Fi~XgjzJ0Jr=`K1DTB5t-gsp2CJuLso&)(gV9wZ
z!B7rlB5r2!K&1D45K*KWs3DK~JeAu22^#rCW(-d73uqG|R&&xjAu)%dCv~w!><c}g
z;h|0&)JI#|AsF`Q<<re{<opfnd690A)oGxJ1G4T?fI}RS$8fwVz9g8|*)K4wTdydu
U0s6mmAB)6mh`oZGP_}^6Z`N*I5&!@I

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/Four/ClassA.class b/FirstTask/out/production/FirstTask/Four/ClassA.class
deleted file mode 100644
index 90d29c0d578a276f8ea9304dbe276a1e9f5eb105..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 490
zcmZvZ&rZTX5XQfSN}&`%5XJvJf(Lu_05KsXoEkN$;l98Imb6{d7LAXk2TeTq06vs)
zwiwXFJ<RUTeDnJzyPse09{_qdvyemHgkfU~1%}#!KX5nT(agOWFT^BeDD-3`(<_F2
zyE7`Gh>{7*Mj7@Wx&M@;A|#bsQd85*KvKE4v5ZnbjRg<8MQk&){JDB`LXpnZ)EUMq
zbOr%W5~pvWh8+`i8x8C-H2xtlnD?3&L}bxkd1S+qfsAI|&d9_bLwTr{v72H048}lB
z1w+-7k+@!lV-er+aX^{6rzSiY@mT8nPtr)|GGVBAzZhMDBs4XH<r8@#hEn&JR}L3?
zP{To!o>DIz=`q2uPbZglrZeYnV9!~(MNyZ5JPs(@D*+C1L^p=xb@L^`w6635vtD^c
Wbpy~Jr+tbf-atxg$O%<*IQ<4Fc3_AA

diff --git a/FirstTask/out/production/FirstTask/Four/ClassB.class b/FirstTask/out/production/FirstTask/Four/ClassB.class
deleted file mode 100644
index af1688d91f9b6d0ae153a4f0d1eb1142f509a537..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 488
zcmZvZO;5r=5Qg97!%`@MAo#8I1|ICu1H=O)oEkO3a9_#_OWLk!i^iX&2TeTq1N>3O
z*<uhA_b`+Bc%PZfetx}w0O;bRhzzm@au)K~V5rXd19yBLPMz!VTzCn?MpuS1xn#(;
z+9MMMm<Ea#O0fR451-;h1k|M#Bx<-RNGj(hl3_ATBEf@B0h<iXc%~lhKqNCYvDKaJ
z`8<y8UJ+Gn8K_yPW1FG=kDkG}*EBz*0j=ePbXCI3aN22)3^W-^1GR{pzQ*<#a(y)s
z3>8;~;%X6$MRd!@K4ogI^0+_Zk<{@|GMCI`%usgM7#)J>of(QlB70&WwZ62RaIP1{
zDH?Q0{W4(slw@}(a>z6C`Lj2$=d`>_R+oV+_Q+bx2JGX2B8J12_#%Y?<_nBk`4yF4
Ufc`d(DZp5Rm@CK;RWmsL1~?aB3jhEB

diff --git a/FirstTask/out/production/FirstTask/Four/ClassC.class b/FirstTask/out/production/FirstTask/Four/ClassC.class
deleted file mode 100644
index 332d1563a88762434718667f620f0850f35abad3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 263
zcmY*T%MQU%5IxggEv@$#SYp8k5Q*HRtHy@dUo>&0+N3SM%SvM51ALU2TM{vgGc)JR
z<2+yY2Y@L$9xT`{L>(141V2bm*;vLZ&*ubZsuNwz2zGz4c2WJ)B|*q^7ZF;aPNK!>
zxQVir+QiIs!*r|SwaT>VzoaPkIwv&3-w!$ABl$kP5WFRS-bR5o`+n&_jt=UqL=P^T
qG+~f!f>7gX%$W=`yn(Kz>@gY{u;DY-KLeZ_fFLwk1#>M%3+*?pIWPhM

diff --git a/FirstTask/out/production/FirstTask/Four/ClassD.class b/FirstTask/out/production/FirstTask/Four/ClassD.class
deleted file mode 100644
index e4fa4eafce285e052137179b7a2e77483f273ced..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 490
zcmZvZ%TB^T6o&udR$7W6h~mBOz=d79fVhFMs+R=Aet-##X*;GZ8Xrp+nz--*d?@3Y
zVh|H&aVF>X{U_&qe!YJH=;GKy23Z3+8+jBMs(1W>yFL$R?)CUiOcI7dSB5gVV92)G
zBNIiK1}qyT*ni50PjMmws!|JTYIrF~D)%OmVKPi2!Glf_8w}0iTs=CMBAKhHGl*2+
z^n4!2PTxWmn+9q&>eyna|3hFf?lsR3NussXNQWf>8O}QGk%4W7(m*XDH^ufDay>N_
z3>8m?;%X6$MRd!@K1FJtns9%_BdPtLU@n=<n4#>gF**c^X=(;*NaTqaNZnsrDxB#-
zae@Y|QojtCUMATc@?82E{rS^3u;(=0B&*Xv7Q1BaWdZiEPaea;s`)&H0p<&gTKN@~
VUw}RwQRyCqHHf)_98xxeqi+RBU~&Ke

diff --git a/FirstTask/out/production/FirstTask/Four/Honda.class b/FirstTask/out/production/FirstTask/Four/Honda.class
new file mode 100644
index 0000000000000000000000000000000000000000..fd6786c2cd82037108981cc31ee2e8325b9271d0
GIT binary patch
literal 257
zcmYLDIS#@=3>=e%ge9CWpacqd0Eh+&QA9ML^qWIsQIeIy@h>VQ3Le0t5Z-`<i?Kap
zkNtW-o&Xl;OVr@F5I*W?5WKayl(Us835|s=^m$2eM&r<hN061cF-4*XVr7z)&<%8v
zZZCP1mU|Ut%nSk(t1MKdw*8M3=Yu{G{NQgfXOG-mc|-2_Xq>LKU6+;r^r)^%4B_&7
qHZ1akAT+s}aVE=5?x0&GOGYaL4qA-<cYt#n5QGk^V6MwpL+=B$^)2K8

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/Four/Yamaha.class b/FirstTask/out/production/FirstTask/Four/Yamaha.class
new file mode 100644
index 0000000000000000000000000000000000000000..2c870a766a4b330de2c1e471e9c93743acd75a39
GIT binary patch
literal 483
zcmZvZOHaZ;5Xb+^tF#nB5XE=Bfd_l^0P%w1RE<duiN^&RyV`b5TQq(wJ!s;=58#I~
z&b9_QxQCg{>o>DAU*8{}0ERd;P(V>b$wV0y27N3Su{{;{9z$g)B9Wdk6np)Njw*Bw
zhKU+XhUOiA<aWTLTibn3QZJ+|xkwp0P8Jc;zKTVZx@qk3a8Sh>L)Z1?lXc;xzMNa*
zSccXp;7MYg8)#x(L(4=P8w~A#2n^bT;sp`4=;b}~?kTx%2mOhLO@>-F{tXYg&lyT1
zIj4U#91(e!i*V}2*L)g~r{%~Q4<<Yo%KmkhQePwtb!UY!AV@+}GZ-!{X6B8Bs;}i8
zPSl_{LWg#!UI9#Pk>nOxHfct>eEbgfl7+h@RTwB@o1~d1U<bQoG3+giPcs;xzd~!(
Y-_ZC2sEZMm?onBR=u5~xMGH9i0dWvs9RL6T

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/Four/bike.class b/FirstTask/out/production/FirstTask/Four/bike.class
new file mode 100644
index 0000000000000000000000000000000000000000..02ef12cf79ad64b50fb89ebff778c6d102ccc620
GIT binary patch
literal 482
zcmZvZO;5r=5Qg97!_ra(LGWAa4LsPR2Z#qvI1x3$aNm{{7Td0A3&x+N2TeTq1N>3O
z*<w%=_b`+Bc%PZfetf>Y1L)$=LJoNY1sg@IFjS{}&fS1VWB1CN3O{97>B>l^XAJpP
zduXBr(|~284Es;};4w)>NL^}1qDDUhN#$P0GD-(&EO^){VU3}gOw@xDigcnzj=FXH
zfG3G_ZlQ{G12r3UY%tXS(K8tLnifPfptYEgtx9+qjXUk3fhL35Q?uCh<egwBT&NMb
zN?%6eau#|bzTsX#nOa}@JQ(s=>i9cZNGCF3DEF6y4k1D{CxJB}sxNv{t4&Qm(JSHz
z4LYHIIWT=hvYQmS<Qe(m@hjL<R^B43%RnC6WbH)*cCbqk!`@PSn!y0`8AfgO1(hFw
T{xFRx!T1F+myms`=5X)@{ZL*c

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/Main$1.class b/FirstTask/out/production/FirstTask/Main$1.class
new file mode 100644
index 0000000000000000000000000000000000000000..68e25a60669e6928531f7356088afb078767bbc4
GIT binary patch
literal 532
zcmZuu%TB^T6g>mgLM;j?KJbZg0WNHeONbky(WGD^4K7>_Wdg-AO*%!t%az83AK*tB
z?|{leCz-jAbMHAfcRoJf-T^dFv5-RAgkfU=iwyY@f8<Wc<-ob=jf9^tEH(leB<Bq2
zYOQM_gRBY5#u99Xg2&Z^_Y^suKn_CTMUo*q5Xnz(sakXYl+;Zu6K#tJ^61n=o}oBb
zy`4zOd!b-3no*z3iW^ALo{W1U_GUoQjeH(<c^v5YJ82}tKrv+88Eu`$jVCmX)rlst
zFD?U3nbqKl79-vZ>4%Y`xmzL`Mtu|8q^S#R>|&4nG5HMZ)q8h7UMGpEqh9NhR9mRz
zDpIr}`&vp7H$$$JP&h!2mP!h=;S^n3EJX$K9I{Mjj$go@r*M&84FmgFrPrPnU=1aT
xNdC9^jG}4tE6lrjv;IJ!0t1Kt5E$4XG=)uUku^}p4hiW@ndSs6qRf${^98KaV;}$k

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/Main$2.class b/FirstTask/out/production/FirstTask/Main$2.class
new file mode 100644
index 0000000000000000000000000000000000000000..c8e7996ad3c2add9eed7d979abac39c604ab1ee5
GIT binary patch
literal 532
zcmZuu%TB^T6g>mgLM;j?KJcArEG}%KONbky(WGD^4K7>_Wdg-Alk}nA<x1ni5AdUm
zx1h4nNoMZj+<VT=osZAAcK{9S8^|E5Lo+dld4}SMKXN<Za$w)|M#763<{Q5B<8y|r
zRqGnaA+N(Qu>g~y<nrjjeNuMEmxDmKN;2dJBL3;EST*NQNnOVx(YClR4^DLy8Ok%&
z+eAv<3j~AKRDCi_jxR+!8TUl!PJyzcJRWp;=%?{_Qj3Rv#E^5Qv~?OcOlTUTqms}Q
zmwrl_Pr;K^jCe1k7pRElZi#rP`Z_jAGc7Q&jUDpG<TI>V_s(p*P8?E4z1AhEwus^@
z714^!Ybiz840sfY2zw~dQb~a}oS{pLrKm)nO_rsZ;}@{!30$T(g@HpX(`!x(u!0Ij
xB>&rdM$x4C75d$*IsHK32pX(^2sEq_n!!3Y$ZDu!3%ip{mF5HtqAZZ5^98k@V>AE&

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/Main.class b/FirstTask/out/production/FirstTask/Main.class
index 17fa61e67c520157ff89db2d57f20ccebab7cbf0..6b74b5e1c5f2c715f1ccca366865cf21d904bd91 100644
GIT binary patch
literal 2219
zcmZ`)OLP-e82+YtOfsGF2v7)bDriE1SU|zFVoRVBn5Ni-VgZp!GHnKunL3$(@%_NJ
z_+aOfy$d|YlOD{`jXRF+*}8G(aid$0-<@eqN-^i;KL5vezyG^;?*H?{PXI=6TR{&3
zGJ+~X2uoOVRllyMs=76onk-&5O0I<Ph-sPbF$sZ0a#}`2!s>!vzcy(Zsl3}L8<wj;
zMj(P-386Em#<C~Gyidg{td=0x4L7IP3<(<&S|@nkbxdn+I5{1`S_whA<%HKd73+mp
zAHBwPw_-TLH-dhK9veD%=&&%_q#`biqBNSatJRz>W6Lt=g^FY7Wf|LuenK~`-9rkt
zBA{S1c8Y`UlCZHG%~Zp(^kUT@9vP1<IUQ6m;5$98;t9b{sP5{HD<esSf&-DqNM&?K
zK|)w2uusK)VHt25mYAnhJn4Cs9dnkR2PN!uh1XfzwA{iCJ9XTg%a<y)T_qp+X5BSv
z3WgAfvUy6y(>OxDr;It1JI*5C64q)Dm0&o6XNa3TYJ&eE46Cdzf%MLkXxGmm){m)p
zPOPi`x?eyUV-nVN;p&`gRGe!RCsdpiZsB^xzA;vk@w|loj>EX!a8f60^VO!oYGqkb
zQLVt1?ER{OacF|{2?>dA(ibJLQWROCib+4l;Rs$})>C?|CJLG-Oix4&*Q}<-97k_z
zWJbXh0=<~Vc^NONn85`Jt2%bVgeB3-<%d-0OMEzaLB^$(=gHW$dEII%xQNT*053E7
z;sLz$BCMwvoiuw4%;+_}qAR!}NV|fv3PX?<6r{<RBkSYlbqdCIC|lai3cFccRdG$&
zh3fN$!Bf`gB4o=hW0!e#R%@nZ<Qlc2;S_{UCB!tlq*teP#}xC$#h_a;>tst4&cpPs
zc|rOU7gv&;oED4}OFYvfcB${IRW}^>KgC5wvGp=<y-41<$OUhi$rcSLX$CIojzGQa
zj?gAnTp@M|16oH%kG>EhIwPJp-O5;oCG2)sQYvlw3<}Vu0&}(pb5oaHw?LPhdVtj>
zS6?b?`~!BX%mSBuHTZAYiqMN%Vd!wv69M69U7FyAT=L6KX=>dv;8y?gYBuMWD!TU}
zAS3^Gq+^Vt<arBA#<(d25)~RaAnHWyIiv1Q7(zajhnlr4!^u?jdfljF7pnXMh+hw=
zK!n*^oTb=H>_dAOAbsa;+ib-)(1&@ps&9Z-;BXd29WGbs+_Q~=`ndLY8}iHoqS|0g
zX+a%~t!W`P7~9ao#x^$3w6T@D+ZV87!k-Rsx|`G7z83cE=f8~vm-eQE@n8#sqB+pU
z5SI?6L-Ek}I2=35xc*4Q_D3RqJk&y3G|#p%N{8d=a6H^Xrj7BL*s0jj*y#nFNz2|e
z7dz`uBW+C4wvdj-qjC8j&h_9tM-hM2#>JU<bOA4=l{T)>u9)tP_qI@KW0tc@T8*nM
zn1ZYT1X-_PJKOb$U;{sf{TyxN7ib5P*n^`O<O98*PiqEQoIsB6Yo4P^IL#N~3<=ig
zKZ&<-7B_JYxA?l<=I$L_#$CQG_n_lv6!9ycm<Oc(H<JH5n)s7mf8i~!KsWs&pn>be
z5y2n0fg>zY62IV8+V&8|kF;+RZx-L;b-aNfb9{q086m`+73P13MZbdr-o<<T_}(SX
z_c@9X!3dFkz`{SkHhhSWpb*7+e2h=fOB`W*iq9yL&zW0D#kapj`vAV+S`WU&SM0+a
T4e;~)HODcIx3U+%0l)hfeSH_q

literal 2793
zcma)8*>@9F9R8+RCYerI0xd)oQ)Nj3jV-8<R<NrrBn3$<0t((FBMF^kN@fDqeZhU-
zao@%LsOQisImhFJPrmr-i*FuZ^lwnVJ85ko(PK|@=ic9Tf4}ed-8=K+pJ%@V(1$NH
zw7{dntHTGsf+a`AaS<~`=}2sM=BSZ%6!`lJrGm3vfhXEEp(3DQaa!1uyGuqa<y3M;
z$<d&~6F@6%ca8QZ#)g6vwCPxc#R|ORqG%`xB^Dy5oN}Rbq&I-2RMTTz+Aq_wT-y6?
zl@0-PP}hHTcaPMq)Df0C|6a>9$E^TXaX#9gO!f~2a1jj$x_dUuEH0L1L=<d`Hg5NS
zBwZ64F2SWL*63J^bqbcsQqw1_Sc(~&M%pSV2p%z<d2rgJU5N&h-XNmrQn5kDMr=9<
z)YP=?7)4@fRS0c+EvJGN+e1Vg;$ny*ak-o&rOOpV!xiXO(W7HCwkTNULU^vV0(DCI
znoO*{N!48w0bIotQvJ!{$nJri!-MHmq_eX##P)C1u?=wrD~e*$7_>@R;p{6odCqJ{
zlpI?@JldqXCZeuJa8>kiTNj&r*)U>*rm*b+4ZZNlVTX=uCE<LdhG|+-GN5BnO1yU7
zI-z1%!G(_W++(pk*@8i<IAz&}ahoVknZ#yDMjFDXjxp)i>f(^f<}J&V@?AO-Qm)tJ
zHL9u@CysS-Yq^QChNKLa#PvG%N;khuqd%)6t)OGUVZ^GGW5Y~f+8{|MBuU9V&#JK>
zxoHafB>@j8h&E|OBSvGgJ2%y0Yzg3yWVI+3MNY*n^X;xU1vA!PE{o|z!RApr3{NYv
zpoyX5Rvb~V$fbpACrwB$k;|ROh8kacyAG%*G}a@L6{Tqnc}&UzOm03`z&~Mo<>4pE
zT3rO(ZVqWEO3;cJP*Iku!tuFAQ*}(Lj-jICxWv;Z@!YK9HkO+d1xE4?S~=bfixY*C
zF<vQVjB;9JO!uy^vcjAY<$_$#3B69fKt}o#(z%!3MK?%C^k5^dUF?fTWU?%yiB>_2
z-OZ!z^0@9AW6&16M`r3+B^oSiLi9N;t(1(s)XwL(jFIKOs}l>9Y2+@g6dJYH8_g3@
zMliVh$~t8|>0CYc_ZuXk?Dmpc{R@pEHd!{bNr<^VGla*=997VksB0#rUP`$&#S4w3
zxFc~+Kc=VVd$QrYt^58h=k1KrmU2XPGAX9qhN`$vftKQF${HgD+4Z1o?B$ZntZBfq
z9NQ_2sifiLt(?8sk9Rb@i}zH#FK?|66s%czp%hBTtx5ShlJAw;MK&U`j#ZvkaH{?!
z&KcH%j*3#wH0(7A%bKiA^)}L|PI8W8ng}#8uczAld20+YC`>a|a137arxje2F|wj!
z8<BKgOh@t}7qR*F<HY7QoHKY+M<QCJ7OguHk0|qt9=YJ<HdZPbW%o21wu(;_tZjg$
zS+y!YBT4_;R30`L8g$|WKNI9%3wQ$H=Qzz(j8BD6--cNzU%BerIZ8FqhC4XwH3Qs<
zySNJCZrno&om=`CXc1+9RH5#lMKG~3q@97jF|_0iLK{QvXRtzQLKlRVgf5)L>f|@*
z9Op0Yy)5kg5S?FRedw|o#N_kJ+LMa2xEkQ9ie3i2ChiOSX0Tlj{Z$N6G!plR{WG{u
z4m+zzQnWj+hSeGDsUo#MbVEoB?VH7o@qoKL7`nN(3|4WNwj!>DwQ%5DWLmI~vtVsj
zMSg!+o5j(1YZXP>S#dqA&tR&GV_ezsws6}F9Ep(^5~JI(n&WZ=&`uOOI9q`W_>~hS
z*qitb(v3B&WG!}J9j?QA+<+b&;%7h>TX;)v<;A*<_iCIN@4!jEN*~1tPGJ<Mu@hfn
z7tZqK_XEc96At2M+=O2s@EbDto$n0Um#1pj<6hjyRRF)@emua=MCo;svleFYJs!kE
z@GzGu9_Gx;44%Rx+{?%P@4#btoV`BDe4fCQ{Q5eDH1$t2+Gz~q8P0;tr4P^IIcUt}
zB0P^5(8_$4<3+qgZv007m+9ArSD1z5O3nUN+P_B0N+^G^bf1dXRjBU&B`VPYvwDML
b3*N+Ad<N+GHh&-DBd#>gKE|i`9O1tKQ4`4y

diff --git a/FirstTask/out/production/FirstTask/TaskOne/Student.class b/FirstTask/out/production/FirstTask/TaskOne/Student.class
index 27c0d770abffef2bdf2232ef575ef47fd3baff61..0812f4ed50d1964ff6e79a3419f83ac98720a458 100644
GIT binary patch
literal 904
zcmZ`$%TB^T6g>mj+S1BH#P{0;U?O`pZcJDaOvJDsaKvhDlT!RHO*AGh`~W}7cyB2Z
zYu(&CcjlavbI*K!y?+2W#es<ovO01W=Aa1_@8qLwy3!jqFZy?C5DI9gj^~7D0@+%<
zXJ8(N4%0#&mO$Z3j_xl!)$E4jYvmC-*O3oOpxmAbb;H2%h9^v2uux#0c_YJH6)={s
zOBTv}tzG)A+wn=|+`lH3Lfi3FXZ+At!IkX0k*+_GZchdd&+%n0ymdwbrFO#2iGV&-
z;lxp;R{!fsz$QTJ$BckM^VEetnv$1lf4TJ@`ShY~Z36xhp?NBz1@TU1*B=K1)pB?b
zD-P_4W5O<FkfHy`Ql(t!l;NDBPQg&uA^3x+F4EMbE~w8n-XNYMScNJ-v&a%vYXU$O
z%QOkBV3q1`@(c7Qddy%(Hd4uJsbo7zHdD##spMjkoKGchU^BLTOg=dyt#SAYJ-PHk
s#I8;d@zNZ~RuqK5cDjz8)G7R<!@t3q@1*M#lRCwJbarE%y(stnZ|M_%TmS$7

delta 261
zcmeBR-_F8y>ff$?3=9l54002>%9vQwCblOrT23}(6t?xrN-Rs%&q>Tn*AFf!%FIi*
z#uU*EV`N~-OUzAWWMEB$&}>EdIXQWg3mG*e85y`4cz}j8GVnubAu!D}c@v}7<S-_&
zdR7JrpsX-ZO%4MS0}GHA(b~?ysHMG?fn7^yD+8~V?p6kYjX-fG1`!}B#=r_Bd4MW;
z88{jEfRG=kTaZB%D5?d~4^$%#<N-}$kOZn^1hb@oEG95Z8pvV>ipl_aOiT>20Gy{O
A3;+NC

diff --git a/FirstTask/out/production/FirstTask/TaskThree/Car.class b/FirstTask/out/production/FirstTask/TaskThree/Car.class
new file mode 100644
index 0000000000000000000000000000000000000000..36a2c2e48a2b46aeb866c9bdd7b22401c9b70c7d
GIT binary patch
literal 493
zcmZvZOHTqZ5Xb-JwGS70iQ;>`fd}{K0b-&k@c?4n4W0{BsKTyU785^~9yIab2k=7~
zr(hr^w#iIp=HK6R+OO}APXIOSn}{K<Az>kj6hqGAlLv1Y3gL9bQ1(WGAyt#Uj7}Kh
z<x0nZ4nu=!VFeaL_MSg+XT<%1<33L!F(y?ojTnl}Sw#lUbtwJFjY7f4RUNAgCHJy@
zYqu`E%l5h5xM{cSdh^tE?K2Zu<TT_h6tKon_=mutJu2SFrxxXTk9qfq(t~QHqhXyP
zy&R*?Lxw~>=+h*bru4<tbler8$Gd8_d^70rQHO_8#lOi!G?Wvi{zIuUB>SPfqv1?9
zn1(&kkP4wwha+`W9H2<Asa6amMvCkPMGkpJK6&^K_A)D%$f`0B$0k{8F2EMHDPq`J
g96p}G0OJ)}KK+Kw5}^K0VRYI{h_Qg|QZ<IXAEp#v;Q#;t

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/TaskThree/ClassA.class b/FirstTask/out/production/FirstTask/TaskThree/ClassA.class
deleted file mode 100644
index 84abb9f4d3e5e9372ad6a05881a349e08c223df9..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 502
zcmZvZ%TB^T6o&udRti-RM8#{}feX8I0Wl#6VNt|b!hXOB43^fk#l*+bg(fb103XVD
z1`J-}EY8WfegDav_m9^%0CgN?5JOx;!ax!!hWwP@bIax4*y;_ZViYl?>e7?ZIYYcs
z9q33y*N`!gh4HK1c?cshqb`3=LnV6wlD>5nNH21tK=4^Djdg}{r)Aqcv)k%-dKYH<
zy4N+EcEfSZMh1CoXebycVw0ix4}w9vQ$W`vjmlDFu`MY`Z(OSmG;GmceIDNSCxH-F
z)8%2<U`RCm8^MsXr6(@uv!Mw3eCSf9VEZHP4tO9{{FO{Z6B(-7Ur>!9*%7YmGh`fp
z9*jg=DoS>#bE<a6F-r8U>cv3)NRi#9$Rf|kCr@6$9v9^uvZ@TkQ6_6F8?cK#iWv4+
h!)FT^pg%z?tUV+54Nyk}G`dat2Si^%4yYQ#;U{BPV%h)z

diff --git a/FirstTask/out/production/FirstTask/TaskThree/ClassB.class b/FirstTask/out/production/FirstTask/TaskThree/ClassB.class
deleted file mode 100644
index b338a5414722f6694d2b9e614ee5877805e889c1..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 500
zcmZvZO;5r=5Qg97tF%->5XJ9$0}uA-0b)W?!l8(<1kVd@V70WSEgFB89yIab5Aa7B
zcZ-2U-A!gP^UglAJNx<d{sEwY0}Tlz6{K{eks&DbX?WM41dN$2mxf`JAk*L;k4_1a
z)!INs7ODbGM-I9uzoie<bg4Hsou@EjQ&Hv5B7(9VE8I6P1MWpm6fioiXR%69aXP(g
zqkG=(^v;a-Rj+Hb?55)wmWBe>6clxouuf3=hd`j*OP=eA7S(x=dG|=9$MxDk!N%WL
zSOlq-f5Qm!Huu=YY&v8?pAKD-Dcb&sx&s<;8UG|x(S(Om`!x=$E=b|Te<aWxe-?~b
zn@dP89+q`1uZ%;K#Zcu+fXJ~5yD1`5cp`lI=ndpKmMg+a8AxJFSbbiAZS07MV0Ur&
fB!&U%3zXu@EAmT#{6dMzioJxW3&@^O6WIR-ckW_s

diff --git a/FirstTask/out/production/FirstTask/TaskThree/Vehicle.class b/FirstTask/out/production/FirstTask/TaskThree/Vehicle.class
new file mode 100644
index 0000000000000000000000000000000000000000..4d508d20f0f38777eb69c56a66c4da517cdb8eec
GIT binary patch
literal 503
zcmZvZO;5r=5Qg97s}!qziHe`~1|ICu1H^<N#6uBdo8Aj<V6n8Ov?l&6J!s;=AK;HN
z&H_P=?qMdgGxNN&vmc*t?*N)O${~TIf|Q0dG7N=@``{X$>yM27V8VwHL#8Qw5uGz6
zYjsCO7OH}rhBauv%B{y)#HUmh#MD$V=O7Un*P-wuD+;+gZDg^*P`&J!W?%1h?92Xz
z-o5Gf^tRcuEWMRO0YwER4P|UHl>b36DEAWR`J_=>h|H%Y1>uhxbw|M#L(z6;clJ2s
z+;I3<3_Z?}Y6rLE@}}_lRXiQ=&~^thQ8I&}>p5;HWW2mgMPo6e8O%SV2E8$iNk3-=
zaX92%AtBmQ=Tr`jV^nCb@+83IX31_-WRPd%(<iTBPxJH+S(yfssFKwd1=z(NMGX6^
h=Ce5rP@kcc)?bkS2FPCo6#AU(4~V*g98fla!!LXDW7hxx

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/TaskTwo/SingleTon$SnglTon.class b/FirstTask/out/production/FirstTask/TaskTwo/SingleTon$SnglTon.class
new file mode 100644
index 0000000000000000000000000000000000000000..1309cacda92701d848e516ddfc4ff5279e90a18a
GIT binary patch
literal 1063
zcmaJ<-*3`T7(JJk6-vhdaT^<M)1gx42L5`2ESP0R60$uMNsLdWR_rXdNn2*3|CDZt
zTQr(I`$rkS+f|1_DM>H=?m6Fg&b{Zy&oAErwD3?tf}zwigSWkRUfpo`(6xIWuNd@)
z)-)Jo4N1%~WQKOw;X!C}%Vt>Z{+HAgtdxc{R0gHef6{%vZ!nZ!&Y-B!Ft0$>ki`N+
z(sDgcQ;Jo+dt@G)b=Ty>`r+Wnw!)^0JPHb~X(-}4L-q==&&MMgd2G64`|vfx<LU%^
z&ozUfIZ-e|pZqo_Cx`}7|0NB}C^5{n9PWg>42zSkVrED0r;t?1?UH!i(6EMeVL1{I
zFsxPeS*EG|Z=}5Ey&}I0U5DET<I%wOd*;BUO8p;m^%)1rQ0RJ=>Gn<E5gp<-GB-!m
ztuSq$E;xMSkl3{047nMOeZomqy-#=8vfSAI_5@KJQfr2U-6n%-cw^tPpE|-r_D`;M
z#9dM213L(xc|oY4!H}Oy5`)&^-1eg@vq_s0=ds<ObIwzA6YY{nC6HSYIipIF)(x!F
z{!RM2MXPw!6DXgNxq$YOz8KX(EV1{V@I`FK_(w=YRkgrs=g3`v34G!&e1$67B?`B3
zC)%fw5K2tE4~c$&Qrjw@VewP6Jvr`*uHdeaj%tL_bE?QqEMyZhRe_BB4eW(<0?C+G
zo<a?JOlZV};#a~KR-`kmo<cfD`4ox}ap_qlmB0tglW#d5yoGyIOJEy2(OM@DbYjGy
J*x^BY`4^UK;0OQ!

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/TaskTwo/SingleTon.class b/FirstTask/out/production/FirstTask/TaskTwo/SingleTon.class
index 05fd043b4704230ccbec21a5ec26fa13ee1714f6..0587cfdc1363b9a4bc5a6ff7f540abfe9d01090f 100644
GIT binary patch
literal 775
zcmZuuZEMp|6n<_Kd)qW^*Vfj}I-T3pwiEjUI((tNFw8n3VX#kf8!v6TG#N?i&_Co?
zo!~%0!F>??Nh0FO?Iy@Z$a%Tvoaa2xy+8ka{t93dcMW8qap)#4A<M8Z5wAtp7s05z
zGn_~_VaRTJftTE8&|2-?JaWi$7$yoZ|7*A3#EG0zS2&}gx}|`;u=^tNg2YZDDW<&~
zN(^OtYw*l^;_M7o`qm@cHn4ySN7Y0Pml<jo3^MS86vht-xiyDY90}J8M!l3*16Mc}
zO)TLmL&XvCzH=CMZ7TcH329J|lhoC$bG4p9(;9X3!&j0BT3#Rrv*}Pqju`rMQnf-?
z_`4$V(){#LPsU!%kRQq9?5gUm_66t+MLQAh{<b(!qa5pJGL;Bt9EFGTMTQ;DB3C~3
z(ygU`<nN_-!cZ8<IN6pdv6!RHuyjt!x=nhOTyrZ3WYqUX9803fPYbw7S~K+a3`Tla
z6lLh6$ETBPls%w~kuP?R!H&SI#ZM@IP;JX(OVG%^gbo1{F0NB%&IfQq!R4_+OXgs2
z6*$m7Lj4C;tBt+q-&I)rg2vu4njcZ`oV-KM>YQwRqsn_4C}5c&K>wQZ8OlM>S+ZlY
y6YB6$!4yq|xP=(2R4GIIjV4FtF~{03;-^t56?YqV$m_(Yg$_lAiW=B>xcC>L2d2sZ

delta 252
zcmZo?+r-Ru>ff$?3=9l54B`{H>?S@Ckzpz>VPp{Y2}vx@4k^#q56;X>&q)o*&$H%Y
z;Fv7L7|Y3Flbn;8msw&rc^ac!J%b_x2Llt(1V#of25tr(Ad4BuXJudmitqt>`aqfy
zNV95fXJFh2WH2%C14)oHh!g;lJP-v8f?(~O3_=XTKoO8;8L$ik1Is1`_6<NjBa&WD
opv5BQaC?-&u3%u`-p#-fxt)P`GXp!wHe?;FK%OX2jEO-E0M0NS{Qv*}

diff --git a/FirstTask/out/production/FirstTask/threePointFour/Company.class b/FirstTask/out/production/FirstTask/threePointFour/Company.class
index 46e5673c1e703957e9e9cee87fa795e167fae083..ef570b7df8e516445dcd7db75c58f22c1a642351 100644
GIT binary patch
delta 69
zcmbQkGL41n)W2Q(7#J9A7$hfhMKGpLOx`nDmGPV=Hv<m?BZDYV21GM3a4~Q*@Bvx8
PKsFPD7?33nW=Q}5BqRz*

delta 74
zcmbQnGKYoh)W2Q(7#J9A7^Eh0MKHQfOy0x7oSIuOS(fpFrYHjs10#bNP#Q!tFmN%5
UGVlReyg)V+gE){S0cJ@80E9jZga7~l

diff --git a/FirstTask/out/production/FirstTask/threePointFour/Emplyee.class b/FirstTask/out/production/FirstTask/threePointFour/Emplyee.class
index 77a13d24e72e6a8bc75575fcc437483074aaa5e9..5b38db832ad4c78915ff625e6495efbccc4d0fe3 100644
GIT binary patch
delta 61
zcmeBRna(mHk()a;w;(6KGBq_mb7H!ZGB2E)mzbN%$-u!N$ipDSAk4@h43pWoD2)*S
DRaX*%

delta 46
ycmbQv(!nwzk&P`iw;<kgVvdp|2Z-gDn48MUz`-EM!yv>U%*en86x_HmjS&DTw+r3?

diff --git a/FirstTask/out/production/FirstTask/threePointThree/Car.class b/FirstTask/out/production/FirstTask/threePointThree/Car.class
index 8e87e2a8f352ca58857133233814cd2e1d5e5dc5..a245ba4ce573a19b62d3e169c2c0e1d1d41fa2ca 100644
GIT binary patch
delta 34
qcmcc2`G9l61QGtk<lutT<jl0p<iwK9{5(bmai59yq8rz!vj70z)eGMM

delta 14
VcmaFBd6{#<1ZJkh<c$j)SO6<M1w;S<

diff --git a/FirstTask/out/production/FirstTask/threePointTwo/BigSchoolingSystem.class b/FirstTask/out/production/FirstTask/threePointTwo/BigSchoolingSystem.class
new file mode 100644
index 0000000000000000000000000000000000000000..5e97622b230b89a83b7ad3e0691d15791771c43c
GIT binary patch
literal 1074
zcmZuw>uwT36#fQi7q-itQtPc)FI?1OTkl}KB~45St%Z>EkI6tMuyxthWzgtbY1)!#
z;sf|l#xrbzQku=qoHKLI_npg}zyE&y0Z_&(9X|Lq1Psh!o*{O~zwn~P?RIgec_><v
zVZLnIrrcui=kg5=L57s<xI*kYrY-AVono!kaU3fMogw+|v&%Cs|IRbA-^=v4#k)Zm
z40Eq*n;YvoG(;3rlp&j|Ot@;&HSKn3_9Wj3A&!KGq=6I`88Xw{Z_KtwPwusEJt?{j
zkv-8iNp!s%hID1x$vZD;SYn9QdGF(nEs8bSKM=Omk%nJ!UN&$ASIJ<E<{2==E9ZPl
zAza6bhKzw5Se+{3C?>ztr&2C@37SrEm-3aAwcuUy)^N+fZQNndn=ZFooht7NhQw?=
zbmWlNP%v;8_o&{(5>DeWXrC0iWfS2AMb0-=j%x;rctEyoAw9NKE`JeU8XE>Sm1&qv
zx4G;HS2-w<M+P3Nn-JaXIhIv*7y@sd1ByLbF>O)pcbmek^QJY-#%Xb@!Ch17r-uRA
zF?$TF=Q=do))K?QFs)Hj4Nn_2MXx!1w<WesMYS~Rzosfh?TOQS$MC1;L=sb7rrl2x
zO#rP=NPAB*qkW|?04w~4wx0+k76u3(BSva^e}GHJSpGpKK0Kv0LI5E50D?#&glD7~
z9t57FL>i-M8^M>!OTkBe;#%Pdu_N3(L3V<sh7t(V7de9z86&+IBYikU%6Ul3C%8{Y
iV`crU@^FeHL9qfc;-I&V1hO<=lc;lJt}U|i;pKmKc<~be

literal 0
HcmV?d00001

diff --git a/FirstTask/out/production/FirstTask/threePointTwo/Composeexample.class b/FirstTask/out/production/FirstTask/threePointTwo/Composeexample.class
deleted file mode 100644
index 1184ba8bfe7bc7dd00944ca0f4d187a095a54e84..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1042
zcma)5Yi|-k6g>l!UA7CwrBENWg0BK<DaC3Ltdd5fkst{TrXL5`l&$-~W%2c|G*l8z
z`~m(b;~g-qP@4E*Z|2VIJ?GqeW`6zt{u4kM6$L){B?MF~Ajl9s;_rFR<o03ib?ZoP
zdkn#{VH@5qgFl^VN{|_ry{@b4b;q#1{SQvA(e65qDMMk1y?p2Lq{~0^q&Mg%``qM~
z43%M_(kN`@6-bB(rX_~;boG?0;kkx=SUS6tX@+nCnuM5&WyBd)r@8kWtLOA}{Uf(}
zrq1B&w;2-E>7OP7OA=NX;xk9yprhNKj7!w$+b%baj*Ke|fmbgoH5peK<Y)E#X0fod
ztssGGLVS{;_+R4BYv;O(8@MUN<{4II#ZDBJLb#1}327A>WT%X2eCm6;MSeH~vL`-a
zF`QhTX6Vr*b#76$gu5#4VS{?HxkaPV&dO1+iM)g@6$RWU_r``yBQZ!lfos}CHK%J~
zPy!EBJRDQi##Dhlr$dZORm0Y61FNOG`@ALW(W*|Hn@#Q-BLBM?@VZ8yVQpp*)7F+4
z7RN#+W-_RgY%(ndrQr<Rw*K4@G_mR04bc};bdh{?>BUD^i6Vpz6#bwJiXg=u%HE7u
zz^&{EEc*k}ffmvhM+hGyN@?OiyQp2(R!3MnM(PU{_)w%6As7J_AgCBYJfch`NCHBM
zUK(iq_=KcPRpKo2m3W4T4squja;IqGSpp%1q5OjsIYHVz4=FXo_8cUYkiv73o)C`@
GPyYZ}uIC5<

diff --git a/FirstTask/out/production/FirstTask/threePointTwo/School.class b/FirstTask/out/production/FirstTask/threePointTwo/School.class
index c34613c1c5a7a98ccd96ff00e4384fbcc9415e0c..d00af77f271cd96ce7bd55262075d358a95e8fe2 100644
GIT binary patch
delta 156
zcmdnYe2$sx)W2Q(7#J9A7^Eh0g>rBu6(!~+XZTG_R1pylN=?r!E=es)EXmBz^DE6w
zN-dh$U8T&DmzbN%$iNDe_RD8v;0n$!ElN&x%gg}^at9}8<mcy1R%8sdWoKYv;9%ec
rLOup=24SEj3JlCZlAl3@K@>=XSYix342)owIFQ8zWJ>^fObn6$gw`M^

delta 111
zcmX@dyqTHn)W2Q(7#J9A7$hcgg)*_^O-xr|V+~48_sgF+ze<KHIKQ+gIn^yQCzX*w
z*f~G9Aip>@wIVUMASZRQ4Pz*;C<6<F7y~DRI0GMp<m7pb;*#79JPeFL6ZwIVhk*&m
K76bB_7{mbsxfr1U

diff --git a/FirstTask/out/production/FirstTask/threePointTwo/Student.class b/FirstTask/out/production/FirstTask/threePointTwo/Student.class
deleted file mode 100644
index 51861146c9f8505cb35fe17d4f4853baa411b89f..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 586
zcma)2O;5r=5PjP(1gjtv@H-xiLQ#7*5HBR22pS>W3oKC5c1bDf-||3AJop3rQO4Oq
z!a)xnc4lXG-rM))>-*yqKm(^4C{R<-Oz1Eea#Q!&b$mA*I}iOSAH)ns!wbFmjzO(d
zduePTokGUMHcW<MJc&4e6kZs2Uxd?%7egKrMr*qPXUMlUbe%Zz!f{;^?3&0*v_6t!
zva@F*FFVGQ@cp(Rf~FV}LAK?EyuAqeJnFiAKcN%@*YCNJC+l@niznWkq1^gYPMzVl
z@>|J&I@KOY2@@~+XqAnKB!(n0(-Dhk!0$aNtI!m|Ow2idb%UADZ=`RWku!zXtkR)%
zQG_&}WU@<H0c`;W#R63hWky-I-@)FJXN#hI2F_8WXs!lOLYXQF-lr(RK9OmZEeW=3
zOQh_pC3fuVC2||C5+Q&Kn!H3B73`u)=vu;UukdSbV#2}tKMRL+lU6Jo(M_d4kEv2{
F@&hQ|ZNLBk

diff --git a/FirstTask/sh.exe.stackdump b/FirstTask/sh.exe.stackdump
new file mode 100644
index 0000000..98b3e41
--- /dev/null
+++ b/FirstTask/sh.exe.stackdump
@@ -0,0 +1,31 @@
+Stack trace:
+Frame        Function    Args
+000FFFFA6B8  001800647D1 (000FFFFA8D8, 00000000002, 000FFFFCE00, 000FFFFDE50)
+000FFFFA760  00180066C00 (00000000064, 00000000000, 000000002EC, 00000000000)
+000FFFFADE0  0018014B818 (00000000000, 00000000000, 00000000000, 00000000000)
+000FFFFAFB0  001801761C9 (00000000000, 00000000000, 00000000000, 000FFFFB020)
+000FFFFAFF0  0018021A31C (00000000001, FFFFFFFFFFFFFFFF, 001802C6EA0, 00180236800)
+000FFFFB020  0018021A796 (00000000001, 000FFFFCE00, 00000000000, 000FFFFB1C0)
+000FFFFB0D0  001800DC33C (0008023A7DC, 00002E6E040, 00068D48A97, 000FFFFB0E8)
+000FFFFB120  0018015030E (008000481E0, 00000000018, 00800045610, 00000000003)
+000FFFFBE40  001801517A1 (00000080000, 00010000000, 0010041BFBE, 008000478B0)
+00800045610  00180142EBB (00000080000, 00010000000, 0010041BFBE, 008000478B0)
+00800045610  0010041440F (0010000001F, 000FFFFBFF0, 00180090B0C, 00000000000)
+008000481E0  001004C1E4F (000FFFFFFFF, 000FFFFFFFF, 00000000000, 0080004B980)
+00000000000  00100415650 (00180176251, 001005DAEF8, 000FFFFC460, 0080004B980)
+00000000000  0010045A0E8 (001004D1164, 00000000004, 001005D6318, 00000000020)
+00000000000  0010042FB73 (001800DC264, 0080004BB00, 0080004BB20, 00000000006)
+0080004C1E0  0010043484E (0080004B870, 000FFFFC460, 0018018A479, 000FFFFC46C)
+0000000000C  00100435B40 (00100000000, 00800000000, 000FFFFC52C, 000FFFFC528)
+0080004B960  00100438EC3 (0010000001F, 000FFFFC670, 001800DC264, 0080004BB20)
+0080004B220  001004C11EC (008FFFFFFFF, 00800049CE0, 0080004BBD0, 00800049BE0)
+00000000000  00100415650 (0080004B0C0, 0080004BB00, 0080004B100, 00800049BE0)
+00000000000  001004178E4 (008000498E0, 00000000001, 00000000000, 00000000003)
+00000000000  00100415E02 (001004306B0, 00000000003, 00800045DA0, 0080004B2B0)
+000FFFFCA60  001004178E4 (00800039BE0, 000FFFFCA60, 00800045A80, 001005DAEA8)
+000FFFFCA60  00100401E1F (00000000002, 00000000001, 000FFFFC8B0, 00000000008)
+000FFFFCA60  001004BFB92 (000FFFFCC40, 008000281A0, 0018004B08F, 000FFFFCC60)
+000FFFFCCE0  0018004B0FB (00000000000, 00000000000, 00000000000, 00000000000)
+000FFFFCDA0  00180048A2A (00000000000, 00000000000, 00000000000, 00000000000)
+000FFFFCE50  00180048AEC (00000000000, 00000000000, 00000000000, 00000000000)
+End of stack trace
diff --git a/FirstTask/src/Five/CarType.java b/FirstTask/src/Five/CarType.java
new file mode 100644
index 0000000..df1ac17
--- /dev/null
+++ b/FirstTask/src/Five/CarType.java
@@ -0,0 +1,14 @@
+package Five;
+
+public interface CarType {
+
+    //this method For Testing purpose
+    //when 2 methods are same in 2 interfaces So What would be the Behaviour
+//    public int work();
+
+    public void suv();
+
+    public void sidan();
+
+    public void fourByFour();
+}
diff --git a/FirstTask/src/Five/ClassD.java b/FirstTask/src/Five/ClassD.java
deleted file mode 100644
index 387c0a7..0000000
--- a/FirstTask/src/Five/ClassD.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package Five;
-
-public class ClassD implements InterfaceC {
-
-    public void show1(){
-        System.out.println("show1 method");
-    }
-
-    public void show2(){
-        System.out.println("show2 method");
-    }
-
-    public void show3(){
-        System.out.println("show3 method");
-    }
-}
diff --git a/FirstTask/src/Five/Corolla.java b/FirstTask/src/Five/Corolla.java
new file mode 100644
index 0000000..b8df436
--- /dev/null
+++ b/FirstTask/src/Five/Corolla.java
@@ -0,0 +1,31 @@
+package Five;
+
+public class Corolla implements Toyota {
+
+    public void performance(){
+        System.out.println("show1 method");
+    }
+
+    public void SUV(){
+        System.out.println("show2 method");
+    }
+
+    public void speed(){
+        System.out.println("show3 method");
+    }
+
+    @Override
+    public void suv() {
+
+    }
+
+    @Override
+    public void sidan() {
+
+    }
+
+    @Override
+    public void fourByFour() {
+
+    }
+}
diff --git a/FirstTask/src/Five/Engine.java b/FirstTask/src/Five/Engine.java
new file mode 100644
index 0000000..52efa5f
--- /dev/null
+++ b/FirstTask/src/Five/Engine.java
@@ -0,0 +1,10 @@
+package Five;
+
+public interface Engine {
+
+    //this method For Testing purpose
+    //when 2 methods are same in 2 interfaces So What would be the Behaviour
+   // public String work();
+
+    public void performance();
+}
diff --git a/FirstTask/src/Five/InterFaceA.java b/FirstTask/src/Five/InterFaceA.java
deleted file mode 100644
index 9a55fc3..0000000
--- a/FirstTask/src/Five/InterFaceA.java
+++ /dev/null
@@ -1,5 +0,0 @@
-package Five;
-
-public interface InterFaceA {
-    public void show1();
-}
diff --git a/FirstTask/src/Five/InterfaceB.java b/FirstTask/src/Five/InterfaceB.java
deleted file mode 100644
index 11754d8..0000000
--- a/FirstTask/src/Five/InterfaceB.java
+++ /dev/null
@@ -1,5 +0,0 @@
-package Five;
-
-public interface InterfaceB {
-    public void show2();
-}
diff --git a/FirstTask/src/Five/InterfaceC.java b/FirstTask/src/Five/InterfaceC.java
deleted file mode 100644
index b2b23f3..0000000
--- a/FirstTask/src/Five/InterfaceC.java
+++ /dev/null
@@ -1,5 +0,0 @@
-package Five;
-
-public interface InterfaceC extends InterFaceA , InterfaceB {
-    public void show3();
-}
diff --git a/FirstTask/src/Five/Toyota.java b/FirstTask/src/Five/Toyota.java
new file mode 100644
index 0000000..1b3dec6
--- /dev/null
+++ b/FirstTask/src/Five/Toyota.java
@@ -0,0 +1,5 @@
+package Five;
+
+public interface Toyota extends Engine, CarType {
+    public void speed();
+}
diff --git a/FirstTask/src/Four/ClassA.java b/FirstTask/src/Four/Car.java
similarity index 62%
rename from FirstTask/src/Four/ClassA.java
rename to FirstTask/src/Four/Car.java
index 44ad6bf..f5bcade 100644
--- a/FirstTask/src/Four/ClassA.java
+++ b/FirstTask/src/Four/Car.java
@@ -1,7 +1,7 @@
 package Four;
 
-abstract class ClassA {
-    public void show(){
+abstract class Car {
+    public void move(){
         System.out.println("Show method From Class A");
     }
 
diff --git a/FirstTask/src/Four/ClassC.java b/FirstTask/src/Four/ClassC.java
deleted file mode 100644
index 92dd959..0000000
--- a/FirstTask/src/Four/ClassC.java
+++ /dev/null
@@ -1,5 +0,0 @@
-package Four;
-
-abstract class ClassC extends ClassA{
-        public abstract void show();
-}
diff --git a/FirstTask/src/Four/Honda.java b/FirstTask/src/Four/Honda.java
new file mode 100644
index 0000000..2e773a3
--- /dev/null
+++ b/FirstTask/src/Four/Honda.java
@@ -0,0 +1,5 @@
+package Four;
+
+abstract class Honda extends Car {
+        public abstract void move();
+}
diff --git a/FirstTask/src/Four/ClassD.java b/FirstTask/src/Four/Yamaha.java
similarity index 74%
rename from FirstTask/src/Four/ClassD.java
rename to FirstTask/src/Four/Yamaha.java
index 400a59a..38acdce 100644
--- a/FirstTask/src/Four/ClassD.java
+++ b/FirstTask/src/Four/Yamaha.java
@@ -1,6 +1,6 @@
 package Four;
 
-public class ClassD {
+public class Yamaha extends bike {
     public void show(){
         System.out.println("Show Method From Class D");
     }
diff --git a/FirstTask/src/Four/ClassB.java b/FirstTask/src/Four/bike.java
similarity index 62%
rename from FirstTask/src/Four/ClassB.java
rename to FirstTask/src/Four/bike.java
index 4f7a1b4..81fe5e8 100644
--- a/FirstTask/src/Four/ClassB.java
+++ b/FirstTask/src/Four/bike.java
@@ -1,8 +1,8 @@
 package Four;
 
-public class ClassB {
-
-    public void show(){
+public class bike
+{
+    public void move(){
         System.out.println("show method of class B");
     }
 }
diff --git a/FirstTask/src/Main.java b/FirstTask/src/Main.java
index e15b374..3613ec4 100644
--- a/FirstTask/src/Main.java
+++ b/FirstTask/src/Main.java
@@ -1,43 +1,60 @@
-import Four.ClassD;
+import Five.Corolla;
+import Four.Yamaha;
 import TaskOne.Student;
-import TaskThree.ClassB;
+import TaskThree.Car;
 import TaskTwo.SingleTon;
 import threePointFour.Company;
 import threePointFour.Emplyee;
-import threePointThree.Car;
-import threePointTwo.Composeexample;
+import threePointTwo.BigSchoolingSystem;
 
 import java.util.ArrayList;
 import java.util.List;
 
-public class Main {
+public class  Main{
 
     public static void main(String abc[]){
 
 
 //        "1. - Using encapsulation write a program in java that encapsulates Student's information (name, roll no etc)
 
-        Student s1 = new Student();
-        s1.Name = "KHALID";
-        s1.fName = "KHAN";
-        s1.RollNo = "A712";
+        Student InsertStudent = new Student();
+        InsertStudent.setName("KHAID");
+        InsertStudent.setFatherName("KHAN");
+        InsertStudent.setRollNo("A1234");
 
-        Student s2 = new Student("HAMMAD" , "KHAN" , "B123");
 
 //        2. Write a program in java that implements Singleton design pattern.
 //           The program should only make One object and upon creating another object, it should return the same object.
 //           Also confirm this behaviour by prinitng the object.
 //           Another way to determine same object is the ""=="" operator, it should return `true` if you have same object in both references.
 
+        Thread threadOne = new Thread (new Runnable(){
+            public void run(){
+              SingleTon.getObject();
+            }
+        });
 
-        SingleTon ston1 =  SingleTon.getObject();
-        SingleTon ston2 =  SingleTon.getObject();
+        Thread threadTwo = new Thread (new Runnable(){
+            public void run(){
+            SingleTon.getObject();
+            }
+        });
 
-        if(ston1 == ston2){
-            System.out.println("True");
-            System.out.println("SAME OBJECTS !!!");
-            System.out.println("because Thay had same hashCode !!  \n Object1 : "+ ston1 + "\n Object2 : " + ston2);
-        }
+        threadOne.start();
+      //  try{ Thread.sleep(10);}catch(Exception e){}
+        threadTwo.start();
+
+
+
+
+//        SingleTon ston1 =  SingleTon.getObject();
+//        SingleTon ston2 =  SingleTon.getObject();
+//
+//        if(ston1 == ston2){
+//            System.out.println("True");
+//            System.out.println("SAME OBJECTS !!!");
+//            System.out.println("because Thay had same hashCode !!  \n Object1 : "+ ston1 + "\n Object2 : " + ston2);
+//        }
 
 
 
@@ -47,35 +64,42 @@ public class Main {
 
 //        3.1. Inherit a class.
 
-        ClassB b = new ClassB();
-        b.Hello();
-        b.show();
+        Car car = new Car();
+        car.run();
+        car.drift();
 
 //        3.2. Compose a class.
 
-        Composeexample cc = new Composeexample();
-        cc.printSchool();
-        cc.printStudent();
+        BigSchoolingSystem bigSchoolingSystem = new BigSchoolingSystem();
+        bigSchoolingSystem.RegisterStudent.setName("KHALID");
+        bigSchoolingSystem.RegisterStudent.setFatherName("KHAN");
+        bigSchoolingSystem.RegisterStudent.setRollNo("A1234");
+
+
+        bigSchoolingSystem.printSchool();
+        bigSchoolingSystem.printStudent();
 
 //        3.2.1. Compose class with Aggregation.
 
         //So Car Can exists without AC
-        Car c = new Car();
-        c.showAc();
+        threePointThree.Car carWithAC = new threePointThree.Car();
+        carWithAC.showAc();
 
 
 //        3.2.2. Compose class with Composition.
 
         //but Company cannot exsit without Employees
-        Emplyee e1 = new Emplyee("A123" , "KHALID" , 03322345154);
+        Emplyee employeeNoOne = new Emplyee("A123" , "KHALID" , 03322345154);
+
+        Emplyee employeeNoTwo = new Emplyee("A124" , "Hammad" , 03322345154);
+
+        List<Emplyee> employeeList = new ArrayList<Emplyee>();
+        employeeList.add(employeeNoOne);
+        employeeList.add(employeeNoTwo);
 
-        Emplyee e2 = new Emplyee("A124" , "Hammad" , 03322345154);
 
-        List<Emplyee> emplst = new ArrayList<Emplyee>();
-        emplst.add(e1);
-        emplst.add(e2);
+        Company companyName = new Company(employeeList);
 
-        Company comp = new Company(emplst);
 
 
 
@@ -88,16 +112,33 @@ public class Main {
 
 
         //Example of Abstract class that  can extends only one abstract Or normal class
-        ClassD obj=new ClassD();
-        obj.show();
+        Yamaha yamaha=new Yamaha();
+        yamaha.show();
 
 
 
         //Example of interface that  can extends Multiple Interfaces
-        Five.ClassD obj1=new Five.ClassD();
-        obj1.show3();
+        Corolla corolla=new Corolla();
+        corolla.speed();
+
+
+
+//        The question is: Can a java class implement Two interfaces with same methods having
+//        the same signature but different return types??
+//
+//        Answer is: No, its an error
+//        but if both methods has void return type then it does not shows an error instead that implementation
+//        was for both of them
+
+        testingInterfaceBehaviour.Corolla corollaCar = new testingInterfaceBehaviour.Corolla();
+        corollaCar.work();
+
+//        The question is: Can a java class implement One interfaces and One Abstract Class
+//        with same methods having the same signature but different return types??
+
 
 
 
     }
+
 }
diff --git a/FirstTask/src/TaskOne/Student.java b/FirstTask/src/TaskOne/Student.java
index 9c28d81..1bc543a 100644
--- a/FirstTask/src/TaskOne/Student.java
+++ b/FirstTask/src/TaskOne/Student.java
@@ -2,19 +2,17 @@ package TaskOne;
 
 public class Student {
 
-    public String Name ;
-    public String fName ;
-    public String RollNo ;
+    private String Name ;
+    private String fatherName;
+    private String RollNo ;
 
+    public String getName() { return Name; }
+    public String getFatherName() { return fatherName; }
+    public String getRollNo() { return RollNo; }
 
-    public  Student(){};
-
-    public  Student(String name , String fname , String rollno){
-        Name = name;
-        fName = fname ;
-        RollNo = rollno;
-
-    }
 
+    public void setName(String name) { Name = name; }
+    public void setFatherName(String fatherName) { this.fatherName = fatherName; }
+    public void setRollNo(String rollNo) { RollNo = rollNo; }
 
 }
diff --git a/FirstTask/src/TaskThree/ClassB.java b/FirstTask/src/TaskThree/Car.java
similarity index 58%
rename from FirstTask/src/TaskThree/ClassB.java
rename to FirstTask/src/TaskThree/Car.java
index b462508..5b68f7b 100644
--- a/FirstTask/src/TaskThree/ClassB.java
+++ b/FirstTask/src/TaskThree/Car.java
@@ -1,8 +1,8 @@
 package TaskThree;
 
-public class ClassB extends ClassA {
+public class Car extends Vehicle {
 
-    public void show(){
+    public void drift(){
         System.out.println("SHOW METHOD FROM CLASS B");
 
     }
diff --git a/FirstTask/src/TaskThree/ClassA.java b/FirstTask/src/TaskThree/Vehicle.java
similarity index 64%
rename from FirstTask/src/TaskThree/ClassA.java
rename to FirstTask/src/TaskThree/Vehicle.java
index 163c239..1ac13d6 100644
--- a/FirstTask/src/TaskThree/ClassA.java
+++ b/FirstTask/src/TaskThree/Vehicle.java
@@ -1,8 +1,8 @@
 package TaskThree;
 
-public class ClassA  {
+public class Vehicle {
 
-    public void Hello(){
+    public void run(){
 
         System.out.println("HELLO METHOD FROM CLASS A");
     }
diff --git a/FirstTask/src/TaskTwo/SingleTon.java b/FirstTask/src/TaskTwo/SingleTon.java
index fca887b..201a912 100644
--- a/FirstTask/src/TaskTwo/SingleTon.java
+++ b/FirstTask/src/TaskTwo/SingleTon.java
@@ -1,11 +1,128 @@
 package TaskTwo;
 
-public class SingleTon {
+public class SingleTon{
 
+//    this approach is costly and eager loading   So we are moving to lazay loading appproach
+    /*
     private static SingleTon st = new SingleTon();
     private SingleTon(){};
 
     public static SingleTon getObject(){
         return st;
     }
+
+    */
+
+
+// this approch is know as lazy loading approch because when we need the object it will
+//    initialize the object when we call it
+
+
+
+    //!!!!!!!!!!!!!!! There are major problem in this approch , this approch is not thread safe
+//    because two or more thread can create multiple instance of this class
+// because thay could access the method at one/same time and at before that time the objects were not been
+//    instantiated
+
+
+    /*
+    private static SingleTon ston ;
+    private SingleTon(){};
+
+
+    public static SingleTon getObject(){
+
+        if(ston == null){
+            ston= new SingleTon();
+        }
+        return ston;
+
+    }
+    */
+
+
+    //we can make it thread safe using synchronized keyword with the method of getObject()
+//     in this approch there is an problem that which is ,with synchronized  keyword this slows
+////    the program 100 times
+
+/*
+    private static SingleTon ston ;
+    private SingleTon(){};
+
+
+    public static synchronized SingleTon getObject(){
+
+        if(ston == null){
+            ston= new SingleTon();
+        }
+        return ston;
+
+    }
+
+    */
+
+
+
+
+//    for solve previous problem we have an another solution
+//    which is that , wo sleeps the execution of the multiple threads , for cetarin time
+//    this technique is also slow !!!
+
+
+
+
+
+
+// FINAL solution of this problem is that we use Double Check of condition using Synchronized block
+
+
+//    Thread threadOne = new Thread (new Runnable(){
+//
+//        public void run(){
+//            SingleTon ston = SingleTon.getObject();
+//        }
+//    });
+//    Thread ThreadTwo = new Thread (new Runnable(){
+//        public void run(){
+//            SingleTon ston = SingleTon.getObject();
+//        }
+//    });
+
+
+
+
+    private static SingleTon ston ;
+    private SingleTon(){
+
+        System.out.println("SINGLETON CLASS");
+
+    };
+
+
+    public static  SingleTon getObject(){
+
+        if(ston == null){
+
+            synchronized (SingleTon.class){
+
+                if(ston == null)
+                    ston= new SingleTon();
+
+            }
+
+
+        }
+        return ston;
+
+    }
+
+
+// We have another way and best way to perform Single ton which is ENUM
+
+    enum SnglTon{
+        getInstance;
+
+    }
+
+
 }
diff --git a/FirstTask/src/testInterfaceAndAbstractClass/CarType.java b/FirstTask/src/testInterfaceAndAbstractClass/CarType.java
new file mode 100644
index 0000000..1183b5a
--- /dev/null
+++ b/FirstTask/src/testInterfaceAndAbstractClass/CarType.java
@@ -0,0 +1,8 @@
+package testInterfaceAndAbstractClass;
+
+abstract class CarType {
+
+    //this method For Testing purpose
+    //when 2 methods are same in 2 interfaces So What would be the Behaviour
+    public abstract void work();
+}
diff --git a/FirstTask/src/testInterfaceAndAbstractClass/Corolla.java b/FirstTask/src/testInterfaceAndAbstractClass/Corolla.java
new file mode 100644
index 0000000..3fa8e9b
--- /dev/null
+++ b/FirstTask/src/testInterfaceAndAbstractClass/Corolla.java
@@ -0,0 +1,11 @@
+package testInterfaceAndAbstractClass;
+
+
+public class Corolla extends CarType implements  Engine  {
+
+public void work(){
+
+    System.out.println("Work Method");
+}
+
+}
diff --git a/FirstTask/src/testInterfaceAndAbstractClass/Engine.java b/FirstTask/src/testInterfaceAndAbstractClass/Engine.java
new file mode 100644
index 0000000..a7abb35
--- /dev/null
+++ b/FirstTask/src/testInterfaceAndAbstractClass/Engine.java
@@ -0,0 +1,11 @@
+package testInterfaceAndAbstractClass;
+
+public interface Engine {
+
+    //this method For Testing purpose
+    //when 2 methods are same in 2 interfaces So What would be the Behaviour
+    default void work() {
+        return null;
+    }
+
+}
diff --git a/FirstTask/src/testingInterfaceBehaviour/CarType.java b/FirstTask/src/testingInterfaceBehaviour/CarType.java
new file mode 100644
index 0000000..6b9d326
--- /dev/null
+++ b/FirstTask/src/testingInterfaceBehaviour/CarType.java
@@ -0,0 +1,8 @@
+package testingInterfaceBehaviour;
+
+public interface CarType {
+
+    //this method For Testing purpose
+    //when 2 methods are same in 2 interfaces So What would be the Behaviour
+    public void work();
+}
diff --git a/FirstTask/src/testingInterfaceBehaviour/Corolla.java b/FirstTask/src/testingInterfaceBehaviour/Corolla.java
new file mode 100644
index 0000000..746c42c
--- /dev/null
+++ b/FirstTask/src/testingInterfaceBehaviour/Corolla.java
@@ -0,0 +1,12 @@
+package testingInterfaceBehaviour;
+
+
+public class Corolla implements CarType , Engine {
+
+
+    @Override
+    public void work() {
+        System.out.println("WORKING ");
+    }
+
+}
diff --git a/FirstTask/src/testingInterfaceBehaviour/Engine.java b/FirstTask/src/testingInterfaceBehaviour/Engine.java
new file mode 100644
index 0000000..e4c2591
--- /dev/null
+++ b/FirstTask/src/testingInterfaceBehaviour/Engine.java
@@ -0,0 +1,9 @@
+package testingInterfaceBehaviour;
+
+public interface Engine {
+
+    //this method For Testing purpose
+    //when 2 methods are same in 2 interfaces So What would be the Behaviour
+    public void work();
+
+}
diff --git a/FirstTask/src/threePointFour/Company.java b/FirstTask/src/threePointFour/Company.java
index 7de2b43..66765d4 100644
--- a/FirstTask/src/threePointFour/Company.java
+++ b/FirstTask/src/threePointFour/Company.java
@@ -4,11 +4,11 @@ import java.util.List;
 
 public class Company {
 
-    List<Emplyee> Employees ;
+    List<Emplyee> employees;
 
-    public  Company(List<Emplyee> emp){
+    public  Company(List<Emplyee> employees){
 
-    Employees = emp;
+    this.employees = employees;
     }
 
 }
diff --git a/FirstTask/src/threePointFour/Emplyee.java b/FirstTask/src/threePointFour/Emplyee.java
index ace869b..b70d9c8 100644
--- a/FirstTask/src/threePointFour/Emplyee.java
+++ b/FirstTask/src/threePointFour/Emplyee.java
@@ -2,14 +2,14 @@ package threePointFour;
 
 public class Emplyee {
 
-    String emp_Id ;
-    String emp_Name ;
-    int emp_Contact_No;
+    String employee_id;
+    String employee_name;
+    int employee_Contact_No;
 
     public Emplyee(String id , String name , int contactNo){
-        emp_Id = id;
-        emp_Name = name;
-        emp_Contact_No = contactNo;
+        employee_id = id;
+        employee_name = name;
+        employee_Contact_No = contactNo;
 
     }
 
diff --git a/FirstTask/src/threePointThree/Car.java b/FirstTask/src/threePointThree/Car.java
index 4c976ad..ddeb9d0 100644
--- a/FirstTask/src/threePointThree/Car.java
+++ b/FirstTask/src/threePointThree/Car.java
@@ -2,10 +2,10 @@ package threePointThree;
 
 public class Car {
 
-    CarAC ac = new CarAC(5000 , 5.34f);
+    CarAC acSpecification = new CarAC(5000 , 5.34f);
 
     public void showAc(){
-        System.out.println("AC Compressor MAX SPEED is :" + ac.AC_Compressor_MaxSpeed);
-        System.out.println("AC Consenser capacity  is :" + ac.AC_Condenser_capacity);
+        System.out.println("AC Compressor MAX SPEED is :" + acSpecification.AC_Compressor_MaxSpeed);
+        System.out.println("AC Consenser capacity  is :" + acSpecification.AC_Condenser_capacity);
     }
 }
diff --git a/FirstTask/src/threePointTwo/BigSchoolingSystem.java b/FirstTask/src/threePointTwo/BigSchoolingSystem.java
new file mode 100644
index 0000000..163a29e
--- /dev/null
+++ b/FirstTask/src/threePointTwo/BigSchoolingSystem.java
@@ -0,0 +1,52 @@
+package threePointTwo;
+import TaskOne.Student;
+
+
+
+    public class BigSchoolingSystem {
+
+        School RegisterSchool = new School("Iqra raza tus salam" , "AS321");
+        public Student RegisterStudent = new Student();
+
+
+        public  void printSchool(){
+            System.out.println(RegisterSchool.branchName);
+        }
+        public  void printStudent(){
+            System.out.println(RegisterStudent.getName());
+            System.out.println(RegisterStudent.getFatherName());
+            System.out.println(RegisterStudent.getRollNo());
+
+        }
+
+    }
+
+//    class School{
+//            String branchName;
+//            String RegisterationNumber;
+//
+//            public School(String name , String RegNo){
+//                this.branchName = name;
+//                this.RegisterationNumber = RegNo;
+//
+//            }
+//
+//    }
+//
+//class Student {
+//
+//    String Name ;
+//    String fatherName;
+//    String RollNo ;
+//
+//
+//    public  Student(){};
+//
+//    public  Student(String name , String fname , String rollno){
+//        Name = name;
+//        fatherName = fname ;
+//        RollNo = rollno;
+//
+//    }
+
+
diff --git a/FirstTask/src/threePointTwo/Composeexample.java b/FirstTask/src/threePointTwo/Composeexample.java
deleted file mode 100644
index 5f1a9c7..0000000
--- a/FirstTask/src/threePointTwo/Composeexample.java
+++ /dev/null
@@ -1,48 +0,0 @@
-package threePointTwo;
-
-    public class Composeexample {
-
-        School sc = new School("Iqra raza tus salam" , "AS321");
-        Student s1 = new Student("khalid" , "KHAN" , "EP109385");
-
-        public  void printSchool(){
-            System.out.println(sc.name);
-        }
-        public  void printStudent(){
-            System.out.println(s1.Name);
-        }
-
-    }
-
-    class School{
-            String name;
-            String RegNo;
-
-            public School(String name , String RegNo){
-                this.name = name;
-                this.RegNo = RegNo;
-
-            }
-
-    }
-
-class Student {
-
-    String Name ;
-    String fName ;
-    String RollNo ;
-
-
-    public  Student(){};
-
-    public  Student(String name , String fname , String rollno){
-        Name = name;
-        fName = fname ;
-        RollNo = rollno;
-
-    }
-
-
-}
-
-
diff --git a/FirstTask/src/threePointTwo/School.java b/FirstTask/src/threePointTwo/School.java
new file mode 100644
index 0000000..8516c6f
--- /dev/null
+++ b/FirstTask/src/threePointTwo/School.java
@@ -0,0 +1,18 @@
+package threePointTwo;
+
+class School {
+        String branchName;
+        String RegisterationNumber;
+
+        public School(String name , String RegNo){
+            this.branchName = name;
+            this.RegisterationNumber = RegNo;
+
+        }
+
+}
+
+
+
+
+
-- 
2.32.0.windows.2

