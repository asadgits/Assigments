From 0929fd413cc24b4c295808dc66bc66c9467fdddc Mon Sep 17 00:00:00 2001
From: asadgits <iamasadiqbal@gmail.com>
Date: Tue, 27 Jul 2021 19:14:08 +0500
Subject: [PATCH 9/9] updating Task3 and some more tasks after assesment from
 nisum 27/7/2021 7:13pm

---
 FirstTask/.idea/workspace.xml                 |   4 +
 ThirdTask/.idea/uiDesigner.xml                | 124 ++++++++++++++++++
 .../out/production/ThirdTask/MainClass.class  | Bin 1541 -> 0 bytes
 .../production/ThirdTask/fifth/Fifth.class    | Bin 833 -> 0 bytes
 .../ThirdTask/fifth/FifthUtil.class           | Bin 0 -> 656 bytes
 .../out/production/ThirdTask/fifth/Main.class | Bin 0 -> 1071 bytes
 .../production/ThirdTask/first/First.class    | Bin 1447 -> 1458 bytes
 .../out/production/ThirdTask/first/Main.class | Bin 0 -> 470 bytes
 .../production/ThirdTask/fourth/Fourth.class  | Bin 1413 -> 1955 bytes
 .../production/ThirdTask/fourth/Main.class    | Bin 0 -> 1459 bytes
 .../production/ThirdTask/second/Main.class    | Bin 0 -> 423 bytes
 .../production/ThirdTask/second/Second.class  | Bin 1095 -> 1097 bytes
 .../out/production/ThirdTask/third/Main.class | Bin 0 -> 738 bytes
 .../production/ThirdTask/third/Third.class    | Bin 1669 -> 1435 bytes
 ThirdTask/src/MainClass.java                  |  73 -----------
 .../src/fifth/{Fifth.java => FifthUtil.java}  |  16 +--
 ThirdTask/src/fifth/Main.java                 |  12 ++
 ThirdTask/src/first/First.java                |   2 +-
 ThirdTask/src/first/Main.java                 |  16 +++
 ThirdTask/src/fourth/Fourth.java              |  53 ++++++--
 ThirdTask/src/fourth/Main.java                |  15 +++
 ThirdTask/src/second/Main.java                |  19 +++
 ThirdTask/src/second/Second.java              |   2 +-
 ThirdTask/src/third/Main.java                 |  18 +++
 ThirdTask/src/third/Third.java                |  19 +--
 25 files changed, 269 insertions(+), 104 deletions(-)
 create mode 100644 ThirdTask/.idea/uiDesigner.xml
 delete mode 100644 ThirdTask/out/production/ThirdTask/MainClass.class
 delete mode 100644 ThirdTask/out/production/ThirdTask/fifth/Fifth.class
 create mode 100644 ThirdTask/out/production/ThirdTask/fifth/FifthUtil.class
 create mode 100644 ThirdTask/out/production/ThirdTask/fifth/Main.class
 create mode 100644 ThirdTask/out/production/ThirdTask/first/Main.class
 create mode 100644 ThirdTask/out/production/ThirdTask/fourth/Main.class
 create mode 100644 ThirdTask/out/production/ThirdTask/second/Main.class
 create mode 100644 ThirdTask/out/production/ThirdTask/third/Main.class
 delete mode 100644 ThirdTask/src/MainClass.java
 rename ThirdTask/src/fifth/{Fifth.java => FifthUtil.java} (60%)
 create mode 100644 ThirdTask/src/fifth/Main.java
 create mode 100644 ThirdTask/src/first/Main.java
 create mode 100644 ThirdTask/src/fourth/Main.java
 create mode 100644 ThirdTask/src/second/Main.java
 create mode 100644 ThirdTask/src/third/Main.java

diff --git a/FirstTask/.idea/workspace.xml b/FirstTask/.idea/workspace.xml
index 4cf82b9..78deae9 100644
--- a/FirstTask/.idea/workspace.xml
+++ b/FirstTask/.idea/workspace.xml
@@ -63,10 +63,14 @@
         </entry>
       </map>
     </option>
+    <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="VcsManagerConfiguration">
     <ignored-roots>
       <path value="$PROJECT_DIR$" />
     </ignored-roots>
   </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/FirstTask$Main.ic" NAME="Main Coverage Results" MODIFIED="1627314525495" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+  </component>
 </project>
\ No newline at end of file
diff --git a/ThirdTask/.idea/uiDesigner.xml b/ThirdTask/.idea/uiDesigner.xml
new file mode 100644
index 0000000..e96534f
--- /dev/null
+++ b/ThirdTask/.idea/uiDesigner.xml
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
diff --git a/ThirdTask/out/production/ThirdTask/MainClass.class b/ThirdTask/out/production/ThirdTask/MainClass.class
deleted file mode 100644
index 512e1ff8925c1afa3f55d4fe0077f48f00a113ca..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1541
zcmaJ>>r&fB6#f=p1VRLGnoycFH7N;pNTM`t(-x=D;^4%sASpJcG`$IX9TaSdk=B{v
zP5K(`59q`*d4N7kpP|!lB@ZzJ6M4LsbNTk1@0{I#{(Jofz(f3MVgxAzX$u)-1*TrQ
zuUxz1`Y-IKyDw!^31lC7zNeN2QiWo}z^K4@+Y2LQSM+GYKuQne7A%dB3VXhR3j!07
zYzBVIuEmpy34P8qz15x<w(PndO-vy*hWBvEz-0?Fc>h!gwZllsE-`~11G(hH!FhrG
zEcAR;Q=xRbrBQq!aIIF~tZqEcuWnVHM{Aq;&9&N=Q_s&0J`-2*p@C}_K0;pL;yE}1
z#(_rd_&lhPoD|c*V?6&wso2o5UbpbEPI6kwNC!a8YR~JmWT>?_EZmGq9M-nmGBi*i
zAMKzQsy(|BPbL;LZwnYVa66{7t#uwp6N|X3>tPF|3srscB0jNjAD;?jnnBMe87xLM
z#}a;S;Q_u7nCZIvvK;tLS8aQ0kE=+zzKV1<)#BNF416Upw(fd<x#LDOOP7O|6qs~8
zUvBieyE3f1yB$h$PSA8a4L9`kejrS<h;$lvP7q3j=n_uga^d;e^NJ0|?Cv(n{yAFa
z755Zba)z3VnAxO@bYQ3YiK<N8NZMtnqqIvxw01c~xprx5f|FBD_@>;fu_#Sh@pQr$
zPI9`d8-*RY8U!j*p?k0{)n3qwCbRg##3pJ6>YD#8f%&%=$MatW`_fL@BPmJ6ZK@zV
z6!>GfwFZU>=o8m(b!0T}1i^mqpmdhOA;~Gn`r&~*$9$OO<SLhj+h71ub~~M#rzEe@
zw!oF7@KHW!=XuAvGCvS3<%NJ%^?ez}?II%sKMCA8lk|DH82Fht^xdYcT9P>C@Fkxl
z{f&SHLzd$bcQ$9iIdkh6;?G!J;;7ZY7@som{fQ0mHI`%93cjI4JO7ImErH+rFm{eH
z<}4n;>|=uK$@M;_IOjJ0!o}R|5w6_X{u^_{oB2K#Xi;2B&!&%XtB=K<sr$#cvy`FL
zY~~2}UgI->u5aUd!1oTA#wc=(YlctUO+G>e%%jL3?=x<*acr#M9v*S^lxhElZ{s|c
zlUTW1CB`UzM42{%7!KA@Au(6Ee~c&0YK4SV@g34cn8x?C$WXdYzY%Ouru_w;@!ud0
NU~;vC=lBJ){{!%9b-Mrn

diff --git a/ThirdTask/out/production/ThirdTask/fifth/Fifth.class b/ThirdTask/out/production/ThirdTask/fifth/Fifth.class
deleted file mode 100644
index a080906292eaedaf219606522d3bab25382e6bf4..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 833
zcmZuvOK%cU7(JJ{GgDwFP&(8WTCG+EVkEH%8fi&W6A}`9L=5`@hjx%x=wRZWU*XDh
z(~TRA*2INt<G=84m{>e_AdMzMa_{#%-#Oo%9~WQ00oX$!j1V*v(t-{{AlmUd{&BIY
zP67S7GdOYuL@mOyB@1Ch1d{FHWZ*v=dwuuGq~CJKCjv58%d^Nr%*3*VI1&PhuJhU{
z_6SjY+UmM(U%=S&2A*FL&~o`^7%NDbShZjy{ZD!0&57^!Sv8!n$*u=L-mu7-1Ha*q
zU8i4;;0o4FY*@%3E0Fq6jet2)9lgPvV3Udh?!o*TgO7$UDKB341`8=KoK}yKmHM#l
z^qS7tQ~n|-{bP?(WA(pwROWKJ1nTshBbpx54c}?MdhCoAU6ICcGH$z7PvJ&_#okq1
zvCWlQd<0HYyQihm-ozHqtMqo67reuT!Y7DxnD6O?aE+%iPY?ox2#RnWH|S9evOE<)
zmDM5Mk-`^53z^RlALz{ymN`uIO2qi6@c=13uU;UrFQ6qD<+Cp^f74S`54DP3lD5p8
z;(^@POS-Mw@)TRPwDr+jENS~^NPa}p*3Ypv)y3KDXI8$0G1bIW()+%t)M$a45;*{?
zM79w{n%)}!>(sD8UK#9gDR&sT$H;wlJY?Mg)o!z^LN*C9-r=pYa~C&hg=m*?i<VSe
uFBKhLDmoyh!TGnD&%?N2LWmh<8YV(Q{eaXje$6vxq>2S=7Ra$7g!~^MK!WQ4

diff --git a/ThirdTask/out/production/ThirdTask/fifth/FifthUtil.class b/ThirdTask/out/production/ThirdTask/fifth/FifthUtil.class
new file mode 100644
index 0000000000000000000000000000000000000000..d7fcab7222c86ea060d7ba5ae51a0f6ef1f80455
GIT binary patch
literal 656
zcmZ8dyKWOf6g_um){n(;yvF8X#}X0}ib1jgMQ$)@kRnAg4-rT|-mH@`8#`Loe1X4$
z3Z+RyLj|JX18AxF0{(y^=8R(@!W45K=bn4+z2DEjegn|QMgR{g4_$(foS-r`?@Tu_
zlf&-w;W&;mL9TBnHrp1c&GvqP0*ZMAC0s#Cus*V*?5Mlr{@0mJ1YtCtO|loMJ&vEv
zj)!sjR-iX`+q*PRrUx-O13Ot^ugoxEraG8LCfPTsb@3{xvm;AxIQUQEk-%SS(59S|
zd|`7LQ(%;sL%NpG%L{02FEi1br{-kUHQ1ZZ(kR}sPPhDb?v7g<54fDivjB>g_kduH
zQI}R|{kxwbpXhif^LH?lSm$3_`4xnWil{C#m&lDT$bTgGFS&4ud=)j~fjceRIr7it
z96(P!_P1M&Q*?CS@9Da3oub~V>y!5=sQwv>b1i3!Urqf1xw$8E#puU|Q&Y=PAF?B;
z<)OmiLMl|LRYMbXv~Uf#7~jE7+(QE$)@(8B*4pBFW!zv@4VtVrYipcM<36s_Q>^I`
mcXNBJc3nO80d6CA&N7h&1$}W32!F%RFW6IE98@Uhh|NEsjAfw!

literal 0
HcmV?d00001

diff --git a/ThirdTask/out/production/ThirdTask/fifth/Main.class b/ThirdTask/out/production/ThirdTask/fifth/Main.class
new file mode 100644
index 0000000000000000000000000000000000000000..3d0d44894466872d30845d3f966383d268025e6c
GIT binary patch
literal 1071
zcmaJ=T~8B16g@*rm(~@KLJ_O5Drk$!B7R%qgH0MYDM~EjgHJ;l=+Ny<vpXf}Kk;wq
zgBl+E0sbiCoi0gBXxxX{xp&Sz_sqR>|NK4s4PYCU943%*kajVN48!aRKjnVN)v^EK
z;6yYHLuOklY2GlTO6C15rjT`zb8!Xk1$d($8_^+@?orS}eLy6&zZ*$q8YU9FL&>Hw
z<6zdsHOw*09LXco@@sbeWMs%N+0;En;ptLP4(3SVyo&`C7#2IcEvi~Ix%n(ji*~W$
z%ESzXQV^7rYy;VpN~&W@bsb9%Zn!AoCPRLV90sRr#f6IWmM&A2_Z=)V<Pw!TToNu_
z)rW$V*QFBgdz}Lj?eT+<Jacv3<l#P#q_xkTY15J<(X9_DD#XzlP!&pF#^t1Q9vxFu
ze#|jdD5Bm_J{FL&hVDg8QIl3c)(YIP*QB<*)!M`+;@ur#TKX`a$zUS~ADa#y+lp>6
ztPVRZ)v0a^KdD?&<Qi`p9rYQ$juz$|n2^5X>M#`XYF+DguUol%ml4l}z`cG~jDe3{
zH+g%N(Y~HjRCyRSq!E=VJZ0G2(}ss$)xH`}A9?iHI>JjD6MKR3OiOqlZN)t1$=GAm
zj6f+7RYM-fB6jeCVeL{S#$C|CD~9F&Lupu&YT!0*(O}tc0@O5QXk8)8r$3|r<oZvr
zZ-ZlxR(lMjC=75D0Pf%}Sy`-NjXXAZmk^e8es*j7JDg(i7p|Tm5B$L5kZYPypfOER
wY@Wu{au$*}+{1mcQZ#-gl!-Nkb+RY$01pQ-43EhB1kcFI(e623;x(530ZPjXEdT%j

literal 0
HcmV?d00001

diff --git a/ThirdTask/out/production/ThirdTask/first/First.class b/ThirdTask/out/production/ThirdTask/first/First.class
index 53d090a12a5a9762e114ecf9cc7233aebdf0d418..bcb5fb2a9af010d568bd1b2e968246a1a2eb4724 100644
GIT binary patch
delta 28
kcmZ3^y@`9ndq#e~;*9)qm&~-Z)S}e9<kZcd8MiP40G|E}Hvj+t

delta 17
ZcmdnQy_|c)dqx)KqSCz0{}{J00{}gw2Gsxn

diff --git a/ThirdTask/out/production/ThirdTask/first/Main.class b/ThirdTask/out/production/ThirdTask/first/Main.class
new file mode 100644
index 0000000000000000000000000000000000000000..533b60ab32a7a0323e29c04633613735c7949f7f
GIT binary patch
literal 470
zcmZvY%}&BV6ot>FK%ta^p!mCS2bkCgfVk0+m{eV0NQ|qY4lo4TWLosO+(@E{58y)?
z?-UX?&f?tMd**z(Ge5td-vIhJbC82&Bk!VsBB4GPufku5XzD+V=Q2zQ#lDJEdPT6>
zoso?ap)yfAN&SIQ2R1At6&J1{c*!h&yHS&g)G`XC4Ugb#0(U}1g#2~<A_=uXMe=^N
z983Ku#tWV_f;be5k<iNY+hIPPsf6GLJ4BBe%M8_OKL@*ohpAT4wAUH2FZ7gC&3|k{
zAwv<WTW0nShC0J|r9(MTW|^{C_R_#{jw*kWIXQ3|Mb;X3K3C#e=&nKUnO$c!Heg|o
z)!ke`15NJA*vA1+O!$^z23q}s{j^3oxcGpxgLn)8Dkw3+g_prvn*drkWUs`V9O0O8
KgcI&_IQ;{uHduxL

literal 0
HcmV?d00001

diff --git a/ThirdTask/out/production/ThirdTask/fourth/Fourth.class b/ThirdTask/out/production/ThirdTask/fourth/Fourth.class
index 2e2933ae2019d27a75da9bacb0cb2c3918598255..254d10e10df29b714f2a30a956b910f9ddd2b203 100644
GIT binary patch
literal 1955
zcma)6-&Y$&6#j-}vzugT($vtV_NS#ZKY-X4qY_$$C=gA+8U!nS8Imp85_aS6P;L9<
zk-xwvUu_@oQD4$?@EraCkAH)we};NgytA7WI6;r(urqUK?)|>|&D{I*-@AJNrmz~p
z00Jt4IuwK$;t%*ko^Nq$J-@j2z^Ds`(3EMJ;x<Ddomp0)F`Pa)R1=PAt<P+kt%l)5
zpdt`K6uOE*9VZYw63{=(5EXW*$(?D(;g1-C>C9?LdY;sgz$wDx?Y3bx7|x|jnaaOF
z6*VLo2JX2M?zE0GNHHjGyJZsNYw13>VrI49CVgMkaSrDRwJs@<b1+@bcziBOK9?BA
zj*He8tSdoLX7ZYjD;Q=7yN2*GrLao6T*@pbNc0gM*N`R^H~EH9vaLE7E2e1D%oW@c
z?y-oy@cn{#h*=#ujQWTb!&(<jKM@abTmt49M*deKMHSZ>2JhQjj%em*y@7(2?1sS*
ztC*Itu(i2nI7@u3MV3UxuJhJ1cTBnN8iS%~QXa9&ktjumNS(J$!CU5Iat+s;Mtx)2
zt(y$2Oq;^^QuH24qEBIRKjH88&=^vEr+Pv$Xf=D&SfY@WO-=CnMwPccek!Kv>8zF*
zhVGk=D=LN%hEtNv%r3RKFgDvhSj7|$Z+Yx`CR%KA)9O*x+?PPg7q-)&%ugNj+EmPw
zV~qr@8?&a=F6yg0F5fs+%8YFbm%!RpLp1G%8w+6}f<=6!;*Pw+j~Rv!%E7cA+8ajR
zC*eP%SzZ^mLpAm7;hXLr^n=cGtI;yt;fif<Y_*Gh@*TDuaa?-THV$w4xW&VH`VFIa
z_=$Eylz6LEGlfA_yF}76sw%x~StNRkyRPA?SYf!@m)miaRorE`@ZU$Nn*IE68Lv}+
zlYaqF4I)I}8??&P$Y@lu&%u7A$pCKBS8kIL6ZF-)^EXhSRTyvL5?Q44uXI|aaq%ap
zcb_9%$yP@@h%Ail6@r0+l2nqxr?@$mR3-|cWGK$R!x<VLKf}rG(2HC$^i2oxl^sNT
z(`|+A?EjMcfkFm68Y2V;X!Hw1_NXfu#C2+?6Nup*YD#ltt76EbnMF`G8@z?Li9V6S
zB#NH*9JTjbL^*=@ahq%d<O@<HxKFMj6;Tzc_kEX9)_+n<`UC23lzkX8y<FKHq7)&w
zuY0+6$7*(AEb&SQLzBT&a8gMrdxcP-peEI1=qXlGN>aTssim|)2WJc6WLS!jr-4LB
zZ--yxQd$QWR&s%4n8dg|n%l)yz&CY}*+FbHrR`$Ow{5GW&-bGT`rIZRKy6#YdBky1
zwrQLt6(&fBDU9F)DwZnJSV9K(ki|MRM;qgKLTA3BE0otePggiaib&nUWSK*WG}2_M
zFBN=(_dEsTa7n{kq+kM{W0uYZ2+t&+c~W1hO1H32z*<jLU)ZvWvefo3%+m(@9Z@N7
efcVJ=_aQ1YYIH+Y`mf;=T19BKj8E|yQvU$>Z^s@0

literal 1413
zcmaJ>U2hXd6g?AvjI-V}iNO${rA{&6I0W+<3Z{I-ZJK}+kc@&*1k%Kw#7mrAYj=zk
zp7{lR>TBVF=k_5;RN@Cz{So~Oyj2JRXT71svQ<l-k2`11J@?+(``3rpZvb3H)xr>B
z5^);|Bn8GEt0$_|Qtn3S&e~&LHv-A4j_a6f0<pr>ibP7_z!y->_>Q|V*I8fJz6FU`
z3Tc63x5$!nf}C=55l!xn?`YTPMy^Wkj@r-`M(~xysEsj<_c)F?1=7Z=G?jnT_tmyQ
zyfC#|30>^7u^(CLQth^O8v;iPm8t4rN#$W2#Dv5l8;5bE*UNTb^cJJ?It(%!5jbAy
zE(0=@pw(76boY&oqxe=JWxUVA_80p7l{3ueq>b-zOyJ;_+SC=#tt)fiF-@)lqg)dR
zoGA1uEe{~Ga2zKjPTDA7N?>0%x?XVtvK>loxl})hm9?4{7+Lo^zG;@`yA#t`@fuoS
zwCcEexwEyV{d;PyMN6jY)m3Xn`A)dsHO5WTq3Y3U4@;R@^E>n_6#t7P4UB(QV4^R!
z=wT2aS8H{aD$|GH*+|W(`sR{qcb!UH5g1yn2v{|0uIqUxl$VYII2~q!b)54&L#L{}
zq)pRn1fxk@w{QbDCFa5+@Ou8slW^Q8-li@^^^58<uj<D0`L2H5o4Z|LM7p5dMoS0z
zs^@KX+U0)fdn`Q{?`^mB0Ql-2eDqcHlzx|@qFSw*V{|!%pO`nxvV?%W=(^gkv{Vr2
zKw?4QcwcmbL`&QfIQsukeo0Y;m_(7?Ap8wMg#CcyDeg*~1?NQZ6~yn|;~9?OF%ZLP
zj&=kf^bB_bXaBqWmSmE)M}I;-c!l9=##%bH1ABSq&1^h2o5&`z@#i={lTBQhO=gp0
z>NiYqdinz6&yxR4XOq9|AanmE(w~>l65{2@zyH92=^cFi8aZGG`A}61p{gP*jtQiw
zAWhGCuFhc?7iqu2p0hyPGJDQLjCYk65ho^3%z56R&fOSNSiuF};?qM7v$(`KzUTQQ
z;vd;mk`hG;DKR2(nH9o&6vR8of9X1gGJ!*EuRm~3k>VQvKVqIci>sfph}$^y37e`}
AO#lD@

diff --git a/ThirdTask/out/production/ThirdTask/fourth/Main.class b/ThirdTask/out/production/ThirdTask/fourth/Main.class
new file mode 100644
index 0000000000000000000000000000000000000000..3f294b5b2bdcb959ee6b3dc74aa34eb417fae9d2
GIT binary patch
literal 1459
zcmaJ>+foxj5Iw_fldymWxp^HFm8cNBi@{4+6N$Bmm84>+PeU@0fz57ecY=jq;&14K
zT0Hmxew1bJCYGTR*@y0#?w-@rr+equ@1vgp*6=cc0Sp=#GBJ!1hEsduK%^bv?xwf4
z_heNwjI1eF>8A{Xi>XQ+F~kidOpL-j7G63Gv}{n6*P=sHb_Arn^c!Efx}<$68krcz
z8PZnvO`)8%3-7b#!q#iPmFHR8=H-nXFKvb^Ya?6CTIF1^#OLWt;1o_9NSc_$8HUL|
zzzjw+Oyjted9j^3s)6z<cQ=!&#4ycp<rNjjRltSIy{J0w`AWK4)_54+61y^iS<D$Y
zYvLTvGmPzcEnnBu`A9J&s-mg1aMUNsu+%SAPxkeea%$4gB#H2gCN6<9%rwNlv^=*e
z^joFtv<kFvb<h{{FF>jXnh3qjFc6Q&u)tvbpV)k%SSt6@OVsBox#BzicB}ZJL-s7L
znYbR-KE0#-K-*Gl>04phDylmPhKmMnFpPG{*%XS1AF{j}kuqT`SH5mFwxwSd+YVWh
zwpSHSMffV*cZ@^2uBhBGy9*;jAdLuXdhtVVv8f9Ag}+P3Ci}RlIVI{+RpwQgH6Gq-
zIUE)m({<0&f%ZjnQ|h``3noVJD1lWxHjoKhvc|9w%~dot%02M*Wx72)?Jng-ReSy+
z!{_dvcLLj>8^WzQGFY%ZZ@<;d^xnVAa_nIFuqpe5cbC}y7c<=x(1Eao<CK(^Gz#>K
zu0(wb+eBl}$;EYD@^&FSXoQApUHDXt^aK8wvlyN;Wc!|qy3d`c{Q>uOPJ&@D3$9CJ
z;)o!SfdPx*Y7e3PcruWqaXLAa-k>(Am`94<tMD73DWn&R<W1V8Ni)*JH@<^?iQKnH
zhHhXGOC-&90G25jh+_q}$r2v^7=Zz+UtuK2zF{KNQ$H|sgbP4tKi|<;{`s#SVKMUm
zOL&%20tP*jF?vVh;7Cx+C>~+F>k_NDgS!+rh<hXla32pykJIWQUFk_ApCL=O1nt-H
I0(s2+0krdcbN~PV

literal 0
HcmV?d00001

diff --git a/ThirdTask/out/production/ThirdTask/second/Main.class b/ThirdTask/out/production/ThirdTask/second/Main.class
new file mode 100644
index 0000000000000000000000000000000000000000..9af122da65bb679edaf2f5504c0647fd4921f62b
GIT binary patch
literal 423
zcmZut%}&BV5dM}HYD*C;ihA@09&F+j;)TRh(L+fup0@3#ENQ!@6yD2|#)A*wLm6i)
z2^`#HXEO8s%w)cQKED9WaP6Q4!-DCejSj<L&3D|-d71go@meG`LuV#SSwAos<4NS;
z1hxgoMOV{%8<D6o^}{AH^yjL0<&{{fg{W65wa{be?nw(SO9peUQbEi>mf~q!#G+dA
zIH!&msD$ScucWT`O|xFf4b2ITJf>t)G+v|eOK?~?tSeb&(@8`)uQHMi|A85tP;IM3
zJW4&))?3|a6WqY1W9Zic)90XgN|jHUQEuP9gS|CypQ45V0|Scg9|33ZsIoD{Id!!7
dp1$UpAFvKueRaShwRfa9ae-08zogj0)i2DvPvQUo

literal 0
HcmV?d00001

diff --git a/ThirdTask/out/production/ThirdTask/second/Second.class b/ThirdTask/out/production/ThirdTask/second/Second.class
index 376c488044f043d9e5963ba3267ce6dd88dbb4f2..4f994f23fc150436249c7082db7c1b07ace79f6d 100644
GIT binary patch
delta 94
zcmX@kagt-h3Pu5b=ltA)#G=%YeBacPjQo_%YZzIX6gU|)7}yvX8I&0q7{VEt8JK{y
txDdOy5U0;325v3w$rqV*#l?Wa%nTw7nhaV%X*LEy25lgVak4y%1^@?t5Uv0K

delta 92
zcmX@fahzkr3Pu*@qSCz0I~ZA+6c`ya7}yvX8I&0q7!nznfslbgT!`IAh|_ly1Gl!$
n<h#teiV6^61~mqCpfods2!ker7Elu#gCK)8ki|4vkwpUl>NX6V

diff --git a/ThirdTask/out/production/ThirdTask/third/Main.class b/ThirdTask/out/production/ThirdTask/third/Main.class
new file mode 100644
index 0000000000000000000000000000000000000000..2285fe1345164ddb4a4860c573a9eac363ac15a1
GIT binary patch
literal 738
zcmZva+iuf95QhKFX&u+0IW(bA(k3m1q%HLWq~Zc7sFEotc7qUCn`E1Aactx`NIVu?
zPy`YWz(b+V+Cc@8y_nU^?0o;s?*97y{U?AU*d{W_a^x)JQD7)vijTtfMKG~n4KL*=
zW+)t~K*f(4vYqaL!(dp6FH|(PJ#9^JWQ$mV#Zj_w3#<P?+)uMuPN_DW6RPeccoo{O
zBNfDM97!?l8K^KcU9W#~`l9t@ets^aR{z*NbG%l2u}svk#!<J>z-@-w5)1?XprL+1
zI-OJ~nS)eRFzIy%y45=t?k01_a;EhulPVgx$FTXQiL(>u*>V5>E;u$VY-vE{Z-Da0
zGU8}6nCaEL6pGr&Jq^c_VbxKAJe^O6GV;XGr%2TaN5UV7NNIl&%u(r#!E$a8Jz`7~
zRHO55*+`TZ(S)jMOVSMa1jSHVFg^WZ1U21o9*yL4rJE`0W)Jm^qKy`P2fZ?&Y81$B
zlV{V;XwUCmfqhQWJ7jel$l^X(D?NZ+JRq-#hv-m57r!T%hVJ|Te|v?Z^95$L{1w&x
zH{Y<XosEUlyg}0=B^U!H%JjSHD4|KeYa5kBu8|_q#U7nAuz`IXkRZb&@-sNR2BWE&
ASpWb4

literal 0
HcmV?d00001

diff --git a/ThirdTask/out/production/ThirdTask/third/Third.class b/ThirdTask/out/production/ThirdTask/third/Third.class
index 64d5934c34ac66dd63d6046497f0bd710b117943..2acd78559f5f1f896a3606dd237646f6c3c59791 100644
GIT binary patch
delta 630
zcmb7=%S#(k6vn?hb0?EbCmNy|A8}%QH4__~_^yp_SBix~i)|N*g9zGI17Yg66x*)4
zky&;lZp2NYT|}|qUjGUI1$ROh)i24yg@_23@1A?^ch3FY^DX@Ik#Y9__yoWxW_FA(
z;&SIlhe%SY>n2=!Yaom!6U~SV1XkAE;*=*Ko!RtE2tn8;5@;1r3!j*d&A)fI-0XTG
z`?9#c>AmubtL{c#<2!)(zH6WZojSTqJVwgj63KA6(_DH%M_Qo4|D`kpf_Ng(NsPLr
z0SD2t#LCj7Bj=xsT|ML#Jon>ke_L6!(1t9ON`Dms8UoZ_e_2}neax0mfQo*qS&20a
zV34N}hN@o1r>xVtkNF2O?nE*%SwiERuTtz^T^vDAtPX2`&|+!zNN$wS{+m`6ef~db
ze>V9e18I&ZhguFZQh92C4JAe}jA!)L5OD<0iCKqkSje;5LW=G@T{+f{(WhaY-UyT{
zUP`GWEXW=u=)`SMQce7Y^DZClK1Ak4ri7kxbx6jfy@x9Q)BE|)HTy#|`5Va}Cx=a<
T#GU+;59N2N`~p+_mxAeQy7*r!

literal 1669
zcmb7EQF9Yj6#j0r=_VneB_U~xZ3$8|!P<x-Rf0ttEhMBAO|0Yi;%#zimL|KI-5X~5
z?)V#gbbRqyABuxB{s8`f@BR?sySp7oX>o>R_UyU$p7WjWyXWqG`rnhk0o=fL3KNLg
zu+oTQQegU_d?YJ<>F!pxb{?vZ7MQ%@xQ<>Eh?U9=PatU{mBuNgkA%1O1FZ%E30Jya
z+Zm`Zp<&~+K;b27OZ$$yyFPmGK=}zw3tVilV$lhT(k(_Mi(9^<T&=prCV7nHu1X<;
ztYMfF$d{V0qE!vA4Dx9dFhjz9<?iZUSihbm;kh)<;Vq865%uJwe8;QYClyUXN)D<9
zU?Gh~oF_o1C;eLtwMzAJEz6C%kjC4%C@?dSd#dKS9jU){bdO%3rK<x<EY)k}<IGaH
zgm-Mbn?}iy&xO>FmKLywhDhIyvl1YF`o&}|o0RtrhemnZMuo*+)xAD)`d#Ixu!5{H
zd1DrATopK_dye0&w2dW3&FiusQ%%QJ_eO&q<+tTdpEKE}*OC2g={sh8IB7ALiZabH
zj4FGrRbY1OMf(JjRPSpYHd{0VCW0M-*<-s9b(;{P&d1>f5B8&^OiRno-liNLmOe9H
zBNQhvcLH9xM8H(b8~Giz;TSQgQ0<D@C9+-jJRN9X4mXwVdEH=Y67>`sxND<ny16N^
z^m0QT_mQ`!Dv`XX!5gxpJ%3-|=kXJF7#M-xk#4uIf~BVC?Tv=jV?@VijwH7ChiZH=
zs$2bj3?cd!s^e$s5TYjg{g$IuHGwUj3UgSCu2;NX6vfczw?tncU3XpO*ZMLDRAA$4
zflJ2(pQOV^TVV13L)pVfG%nyHULocegD{r}?Z+Hd_!fM}FF%I(oz4WV(VArwx=Ndl
z0`Lhw<tT~kFOvTukj=Tff5N``7c$>vryk?X=JEl~uEnldd28WUEdGJnyk-5coVN}z
z{{%(g082kw;<so2GHp?<#u-tFpGA3afcFfASV-YAQuO1nSmHFVha5{6I5*Eb?F!$k
zyb9JZ#j`RU(!3hR-bR)8C7AIU|7(<!Bk=-m6170ZpVPBApTRB0#j(!VX-quhqGj30
zupy+FMD2AVS3;2=7?D>_7Wv^Di_DQyo|FqDJ3~85k#iI|OJV0ocAg>^UMup8Hx;=O
fiHzY(il4v+Zu6aBm+$bohx;6*=zWD2zQNpc*bsBA

diff --git a/ThirdTask/src/MainClass.java b/ThirdTask/src/MainClass.java
deleted file mode 100644
index b8d3f26..0000000
--- a/ThirdTask/src/MainClass.java
+++ /dev/null
@@ -1,73 +0,0 @@
-import fifth.Fifth;
-import first.First;
-import fourth.Fourth;
-import second.Second;
-import third.Third;
-
-import java.util.concurrent.TimeUnit;
-
-public class MainClass {
-    public static void main(String abc[]){
-
-
-
-
-//        "1. Write a java program to understand the difference between String literal and String Object. Also use ""equals()"" method and ""=="" operator to compare these Strings.
-
-        First first = new First();
-        first.run();
-
-
-//        2. Write a java program to compare two Strings using ""compareTo()"" method.
-
-          Second second = new Second();
-
-//        compareTo() method first of all it works in lexicographically  order MEANS it compare words by picking one by one
-//        when it starts comparing it gets first character of a String then compare it with first character of a Second
-//        variable if thay are same in CASE and value it retruns 0 when variable has only one character
-
-//        If variables had multiple characters firstly it compares first character of both variables if thay has same CASE and
-//        value then it takes Second character and compares them if thay also has same case and value it takes third one
-//        and compares it if third character has different case or value it returns its difference and stops the comperision and didnot
-//        go further comperision of characters
-
-
-//        3. Write a java program to make a String(""Java is an Object Oriented Language"") using ""StringBuffer"" and ""StringBuilder"" and
-//        also traverse through both the Strings and print the traversal time in milliseconds. Also observe which String class is faster than the other.
-
-        Third third = new Third();
-
-        System.out.println("STRING BUILDER RESULT !!!!!!!!");
-        third.testStringBuilder();
-
-        System.out.println("STRING BUILDER RESULT !!!!!!!!");
-        third.testStringBuffer();
-
-//        4. Write a java program to capitalize each word in string.
-        Fourth fourth = new Fourth();
-        fourth.run();
-
-
-//        5. Write a Java program to count the number of Prime Numbers less than a given positive number.
-//         Hint: To complete the above program, you can also start with a program to find if any given number is prime or not?"
-//
-        Fifth fifth = new Fifth( 50);
-
-        System.out.println("Numbers of Prime Numbers: " + fifth.count());
-
-
-
-    
-
-
-
-
-    }
-
-
-
-
-
-
-
-}
diff --git a/ThirdTask/src/fifth/Fifth.java b/ThirdTask/src/fifth/FifthUtil.java
similarity index 60%
rename from ThirdTask/src/fifth/Fifth.java
rename to ThirdTask/src/fifth/FifthUtil.java
index 64c7def..6ab0c70 100644
--- a/ThirdTask/src/fifth/Fifth.java
+++ b/ThirdTask/src/fifth/FifthUtil.java
@@ -1,20 +1,15 @@
 package fifth;
 
-public class Fifth {
+public final class FifthUtil {
 
-    private final int Range;
+    private FifthUtil(){};
 
-
-    public int count() {
-        return countPrimeNumbers(Range);
+    public static int count(int range) {
+        return countPrimeNumbers(range);
     }
 
-    public Fifth(int Range) {
-        this.Range = Range;
-
-    }
 
-    private int countPrimeNumbers(int Range) {
+    private static int countPrimeNumbers(int Range) {
 
         int flag;
         int count = 0;
@@ -26,7 +21,6 @@ public class Fifth {
                     flag = 0;
                     break;
                 }
-                System.out.println(j);
             }
             if (flag == 1) {
                 count++;
diff --git a/ThirdTask/src/fifth/Main.java b/ThirdTask/src/fifth/Main.java
new file mode 100644
index 0000000..7643bcb
--- /dev/null
+++ b/ThirdTask/src/fifth/Main.java
@@ -0,0 +1,12 @@
+package fifth;
+
+public class Main {
+    public static void main(String[] args) {
+//        5. Write a Java program to count the number of Prime Numbers less than a given positive number.
+//         Hint: To complete the above program, you can also start with a program to find if any given number is prime or not?"
+
+        int range = 50;
+        System.out.println("Total Count of Prime Numbers In the Range "+range+" is " + FifthUtil.count(range));
+
+    }
+}
diff --git a/ThirdTask/src/first/First.java b/ThirdTask/src/first/First.java
index e952788..2ae228f 100644
--- a/ThirdTask/src/first/First.java
+++ b/ThirdTask/src/first/First.java
@@ -2,7 +2,7 @@ package first;
 
 public class First {
 
-    public void run(){
+    public void showDifference(){
 
 
         String first = "Helloworld";
diff --git a/ThirdTask/src/first/Main.java b/ThirdTask/src/first/Main.java
new file mode 100644
index 0000000..0552000
--- /dev/null
+++ b/ThirdTask/src/first/Main.java
@@ -0,0 +1,16 @@
+package first;
+
+public class Main {
+
+    public static void main(String[] args) {
+
+
+//        "1. Write a java program to understand the difference between String literal and String Object.
+//        Also use ""equals()"" method and ""=="" operator to compare these Strings.
+
+        First first = new First();
+        first.showDifference();
+
+    }
+
+}
diff --git a/ThirdTask/src/fourth/Fourth.java b/ThirdTask/src/fourth/Fourth.java
index 966414c..a8cc789 100644
--- a/ThirdTask/src/fourth/Fourth.java
+++ b/ThirdTask/src/fourth/Fourth.java
@@ -1,18 +1,53 @@
 package fourth;
 
+import java.util.Arrays;
+
 public class Fourth {
-    public void run(){
-        StringBuffer str1 = new StringBuffer();
-        String abcd = "Java is an Object Oriented Language";
-        for (int a: abcd.toCharArray()) {
-            if(a>=97 && a<=122 ){
-                a-= 32;
-                str1.append((char)a);
+    public static StringBuilder capitalize(String textString){
+
+        StringBuilder StringVariable = new StringBuilder();
+        String SomeText = textString;
+
+        for (int checkAsci: SomeText.toCharArray()) {
+
+            if(checkAsci>=97 && checkAsci<=122 ){
+                checkAsci-= 32;
+                StringVariable.append((char)checkAsci);
             }
             else{
-                str1.append((char)a);
+                StringVariable.append((char)checkAsci);
             }
         }
-        System.out.println("\n\n\n"+str1.toString());
+
+        return StringVariable;
+
     }
+
+    public static StringBuilder firstLetterCapitialize(String textString){
+
+        StringBuilder tempString = new StringBuilder();
+        StringBuilder mainString = new StringBuilder();
+
+        String someText = textString;
+        String[] words = someText.split("\\s");
+
+
+        for (String tempStringLitral:words) {
+            int checkAsci =  tempStringLitral.charAt(0);
+
+            if(checkAsci>=97 && checkAsci<=122 ){
+                checkAsci-= 32;
+                tempString.append(tempStringLitral);
+                tempString.setCharAt(0 , (char)checkAsci);
+                mainString.append(tempString + " ");
+                tempString.setLength(0);
+            }
+            else{
+                mainString.append(tempStringLitral + " ");
+            }
+        }
+
+        return mainString;
+    }
+
 }
diff --git a/ThirdTask/src/fourth/Main.java b/ThirdTask/src/fourth/Main.java
new file mode 100644
index 0000000..8635a92
--- /dev/null
+++ b/ThirdTask/src/fourth/Main.java
@@ -0,0 +1,15 @@
+package fourth;
+
+public class Main {
+    public static void main(String[] args) {
+
+//      4. Write a java program to capitalize each word in string.
+        System.out.println("CAPITALIZATION OF ALL THE SMALL CHARACTERS !!!!");
+        System.out.println("Capitalizing all the String small characters : "+Fourth.capitalize("Java is an object oriented language"));
+        System.out.println("\t\t");
+        System.out.println("CAPITALIZATION OF ALL THE FIRST SMALL CHARACTERS OF EVERY WORD !!!!");
+        System.out.println("Capitalizing all the first letters of String small characters : "+Fourth.firstLetterCapitialize("Java is an object oriented language"));
+
+
+    }
+}
diff --git a/ThirdTask/src/second/Main.java b/ThirdTask/src/second/Main.java
new file mode 100644
index 0000000..35cedfe
--- /dev/null
+++ b/ThirdTask/src/second/Main.java
@@ -0,0 +1,19 @@
+package second;
+
+public class Main {
+    public static void main(String[] args) {
+//        2. Write a java program to compare two Strings using ""compareTo()"" method.
+
+            Second.CompareToMethod();
+//        compareTo() method first of all it works in lexicographically  order MEANS it compare words by picking one by one
+//        when it starts comparing it gets first character of a String then compare it with first character of a Second
+//        variable if thay are same in CASE and value it retruns 0 when variable has only one character
+
+//        If variables had multiple characters firstly it compares first character of both variables if thay has same CASE and
+//        value then it takes Second character and compares them if thay also has same case and value it takes third one
+//        and compares it if third character has different case or value it returns its difference and stops the comperision and didnot
+//        go further comperision of characters
+
+
+    }
+}
diff --git a/ThirdTask/src/second/Second.java b/ThirdTask/src/second/Second.java
index 50eb6c6..e2b194c 100644
--- a/ThirdTask/src/second/Second.java
+++ b/ThirdTask/src/second/Second.java
@@ -2,7 +2,7 @@ package second;
 
 public class Second {
 
-    public void run(){
+    public static void CompareToMethod(){
 
         String firstVar = "aa";
         String secondVar = "aA";
diff --git a/ThirdTask/src/third/Main.java b/ThirdTask/src/third/Main.java
new file mode 100644
index 0000000..0a9442b
--- /dev/null
+++ b/ThirdTask/src/third/Main.java
@@ -0,0 +1,18 @@
+package third;
+
+public class Main {
+    public static void main(String[] args) {
+
+//        3. Write a java program to make a String(""Java is an Object Oriented Language"") using ""StringBuffer"" and ""StringBuilder"" and
+//        also traverse through both the Strings and print the traversal time in milliseconds. Also observe which String class is faster than the other.
+
+        Third third = new Third();
+        System.out.println("STRING Buffer RESULT !!!!!!!!");
+        third.testStringBuffer();
+
+        System.out.println("STRING BUILDER RESULT !!!!!!!!");
+        third.testStringBuilder();
+
+
+    }
+}
diff --git a/ThirdTask/src/third/Third.java b/ThirdTask/src/third/Third.java
index 7f5a2d4..143ebb6 100644
--- a/ThirdTask/src/third/Third.java
+++ b/ThirdTask/src/third/Third.java
@@ -4,28 +4,29 @@ public class Third {
     public static void testStringBuffer(){
         long starttime = System.nanoTime();
 
-        StringBuffer sb = new StringBuffer("Java is an Object Oriented Language");
+        StringBuffer sb = new StringBuffer("Java is an Object Oriented Language Java is an Object Oriented LanguageJava is an Object Oriented LanguageJava is an Object Oriented Language Java is an Object Oriented LanguageJava is an Object Oriented LanguageJava is an Object Oriented Language");
         int length = sb.length();
         int i = 0;
         for (; i < length; i++)
-            System.out.println("char no : "+(i+1)+" char is : "+ sb.charAt(i));
+//          System.out.println("char no : "+(i+1)+" char is : "+ sb.charAt(i));
+            sb.charAt(i);
+        long totalTime = System.nanoTime() - starttime;
 
-        long mytime = System.nanoTime() - starttime;
-
-        System.out.println((mytime/100000));
+        System.out.println((totalTime/100000));
     }
 
     public static void testStringBuilder(){
         long starttime = System.nanoTime();
 
-        StringBuilder sb = new StringBuilder("Java is an Object Oriented Language");
+        StringBuilder sb = new StringBuilder("Java is an Object Oriented Language ");
         int length = sb.length();
         int i = 0;
         for (; i < length; i++)
-            System.out.println("char no : "+(i+1)+" char is : "+ sb.charAt(i));
-        long mytime = System.nanoTime() - starttime;
+//          System.out.println("char no : "+(i+1)+" char is : "+ sb.charAt(i));
+            sb.charAt(i);
+            long totalTime = System.nanoTime() - starttime;
 
-        System.out.println((mytime/100000));
+        System.out.println((totalTime/100000));
     }
 
 }
-- 
2.32.0.windows.2

